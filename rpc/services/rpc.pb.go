// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/services/rpc.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
//Corresponds to pagination parameters for requests.
//Represents a request for page_size elements,
//skipping the most recent skip_recent elements (reverse order).
type PageOptions struct {
	//* The number of most recent elements to skip.
	SkipRecent int64 `protobuf:"varint,1,opt,name=skip_recent,json=skipRecent,proto3" json:"skip_recent,omitempty"`
	//* The number of elements to return.
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageOptions) Reset()         { *m = PageOptions{} }
func (m *PageOptions) String() string { return proto.CompactTextString(m) }
func (*PageOptions) ProtoMessage()    {}
func (*PageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{0}
}

func (m *PageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageOptions.Unmarshal(m, b)
}
func (m *PageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageOptions.Marshal(b, m, deterministic)
}
func (m *PageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageOptions.Merge(m, src)
}
func (m *PageOptions) XXX_Size() int {
	return xxx_messageInfo_PageOptions.Size(m)
}
func (m *PageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PageOptions proto.InternalMessageInfo

func (m *PageOptions) GetSkipRecent() int64 {
	if m != nil {
		return m.SkipRecent
	}
	return 0
}

func (m *PageOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

//*
//Corresponds to pagination parameters for requests.
//Represents a request for page_size elements,
//terminating with the element with id last_id.
//If reverse is true, the returned elements end with last_id.
type KeySetPageOptions struct {
	//* The id of the first element of the requested range.
	LastId uint64 `protobuf:"varint,1,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"`
	//* The number of elements to return.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//* Whether the range starts or ends with last_id element.
	Reverse              bool     `protobuf:"varint,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeySetPageOptions) Reset()         { *m = KeySetPageOptions{} }
func (m *KeySetPageOptions) String() string { return proto.CompactTextString(m) }
func (*KeySetPageOptions) ProtoMessage()    {}
func (*KeySetPageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{1}
}

func (m *KeySetPageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeySetPageOptions.Unmarshal(m, b)
}
func (m *KeySetPageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeySetPageOptions.Marshal(b, m, deterministic)
}
func (m *KeySetPageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeySetPageOptions.Merge(m, src)
}
func (m *KeySetPageOptions) XXX_Size() int {
	return xxx_messageInfo_KeySetPageOptions.Size(m)
}
func (m *KeySetPageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_KeySetPageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_KeySetPageOptions proto.InternalMessageInfo

func (m *KeySetPageOptions) GetLastId() uint64 {
	if m != nil {
		return m.LastId
	}
	return 0
}

func (m *KeySetPageOptions) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *KeySetPageOptions) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{2}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

//* A message containing the current c13n version and build information.
type Version struct {
	//* The semantic version of c13n.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	//* The commit descriptor of the build.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	//* The commit hash of the build.
	CommitHash           string   `protobuf:"bytes,3,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{3}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Version) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

//* A message representing a node on the Lightning network.
type NodeInfo struct {
	//* A node's Lightning alias.
	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	//* A node's Lightning address.
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{4}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *NodeInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//* Correponds to a query to retrieve the information of the underlying lightning node.
type SelfInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfInfoRequest) Reset()         { *m = SelfInfoRequest{} }
func (m *SelfInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SelfInfoRequest) ProtoMessage()    {}
func (*SelfInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{5}
}

func (m *SelfInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfInfoRequest.Unmarshal(m, b)
}
func (m *SelfInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfInfoRequest.Marshal(b, m, deterministic)
}
func (m *SelfInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfInfoRequest.Merge(m, src)
}
func (m *SelfInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SelfInfoRequest.Size(m)
}
func (m *SelfInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelfInfoRequest proto.InternalMessageInfo

//* Represents a blockchain and network for a Lightning node.
type Chain struct {
	//* The blockchain in use.
	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	//* The network a node is operating on.
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{6}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *Chain) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

//* A SelfInfoResponse is received in response to a GetSelfInfo rpc call.
type SelfInfoResponse struct {
	//* General node information about the current node.
	Info *NodeInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	//* A list of chain networks the node is operating on.
	Chains               []*Chain `protobuf:"bytes,2,rep,name=chains,proto3" json:"chains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfInfoResponse) Reset()         { *m = SelfInfoResponse{} }
func (m *SelfInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SelfInfoResponse) ProtoMessage()    {}
func (*SelfInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{7}
}

func (m *SelfInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfInfoResponse.Unmarshal(m, b)
}
func (m *SelfInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfInfoResponse.Marshal(b, m, deterministic)
}
func (m *SelfInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfInfoResponse.Merge(m, src)
}
func (m *SelfInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SelfInfoResponse.Size(m)
}
func (m *SelfInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SelfInfoResponse proto.InternalMessageInfo

func (m *SelfInfoResponse) GetInfo() *NodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *SelfInfoResponse) GetChains() []*Chain {
	if m != nil {
		return m.Chains
	}
	return nil
}

//* Corresponds to a query to retrieve the balance of the underlying lightning node.
type SelfBalanceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfBalanceRequest) Reset()         { *m = SelfBalanceRequest{} }
func (m *SelfBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*SelfBalanceRequest) ProtoMessage()    {}
func (*SelfBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{8}
}

func (m *SelfBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfBalanceRequest.Unmarshal(m, b)
}
func (m *SelfBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfBalanceRequest.Marshal(b, m, deterministic)
}
func (m *SelfBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfBalanceRequest.Merge(m, src)
}
func (m *SelfBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_SelfBalanceRequest.Size(m)
}
func (m *SelfBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelfBalanceRequest proto.InternalMessageInfo

//* A SelfBalanceResponse is received in response to a GetSelfBalance rpc call.
type SelfBalanceResponse struct {
	//* The confirmed balance of the node's wallet (in satoshi).
	WalletConfirmedSat int64 `protobuf:"varint,1,opt,name=wallet_confirmed_sat,json=walletConfirmedSat,proto3" json:"wallet_confirmed_sat,omitempty"`
	//* The unconfirmed balance of the node's wallet (in satoshi).
	WalletUnconfirmedSat int64 `protobuf:"varint,2,opt,name=wallet_unconfirmed_sat,json=walletUnconfirmedSat,proto3" json:"wallet_unconfirmed_sat,omitempty"`
	//* The local balance available across all open channels (in millisatoshi).
	ChannelLocalMsat uint64 `protobuf:"varint,3,opt,name=channel_local_msat,json=channelLocalMsat,proto3" json:"channel_local_msat,omitempty"`
	//* The remote balance available across all open channels (in millisatoshi).
	ChannelRemoteMsat uint64 `protobuf:"varint,4,opt,name=channel_remote_msat,json=channelRemoteMsat,proto3" json:"channel_remote_msat,omitempty"`
	//* The local balance in pending open channels (in millisatoshi).
	PendingOpenLocalMsat uint64 `protobuf:"varint,5,opt,name=pending_open_local_msat,json=pendingOpenLocalMsat,proto3" json:"pending_open_local_msat,omitempty"`
	//* The remote balance in pending open channels (in millisatoshi).
	PendingOpenRemoteMsat uint64 `protobuf:"varint,6,opt,name=pending_open_remote_msat,json=pendingOpenRemoteMsat,proto3" json:"pending_open_remote_msat,omitempty"`
	//* The local balance unsettled across all open channels (in millisatoshi).
	UnsettledLocalMsat uint64 `protobuf:"varint,7,opt,name=unsettled_local_msat,json=unsettledLocalMsat,proto3" json:"unsettled_local_msat,omitempty"`
	//* The remote balance unsettled across all open channels (in millisatoshi).
	UnsettledRemoteMsat  uint64   `protobuf:"varint,8,opt,name=unsettled_remote_msat,json=unsettledRemoteMsat,proto3" json:"unsettled_remote_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfBalanceResponse) Reset()         { *m = SelfBalanceResponse{} }
func (m *SelfBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*SelfBalanceResponse) ProtoMessage()    {}
func (*SelfBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{9}
}

func (m *SelfBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfBalanceResponse.Unmarshal(m, b)
}
func (m *SelfBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfBalanceResponse.Marshal(b, m, deterministic)
}
func (m *SelfBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfBalanceResponse.Merge(m, src)
}
func (m *SelfBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_SelfBalanceResponse.Size(m)
}
func (m *SelfBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SelfBalanceResponse proto.InternalMessageInfo

func (m *SelfBalanceResponse) GetWalletConfirmedSat() int64 {
	if m != nil {
		return m.WalletConfirmedSat
	}
	return 0
}

func (m *SelfBalanceResponse) GetWalletUnconfirmedSat() int64 {
	if m != nil {
		return m.WalletUnconfirmedSat
	}
	return 0
}

func (m *SelfBalanceResponse) GetChannelLocalMsat() uint64 {
	if m != nil {
		return m.ChannelLocalMsat
	}
	return 0
}

func (m *SelfBalanceResponse) GetChannelRemoteMsat() uint64 {
	if m != nil {
		return m.ChannelRemoteMsat
	}
	return 0
}

func (m *SelfBalanceResponse) GetPendingOpenLocalMsat() uint64 {
	if m != nil {
		return m.PendingOpenLocalMsat
	}
	return 0
}

func (m *SelfBalanceResponse) GetPendingOpenRemoteMsat() uint64 {
	if m != nil {
		return m.PendingOpenRemoteMsat
	}
	return 0
}

func (m *SelfBalanceResponse) GetUnsettledLocalMsat() uint64 {
	if m != nil {
		return m.UnsettledLocalMsat
	}
	return 0
}

func (m *SelfBalanceResponse) GetUnsettledRemoteMsat() uint64 {
	if m != nil {
		return m.UnsettledRemoteMsat
	}
	return 0
}

//* Corresponds to a request to list all nodes on the Lightning Network.
type GetNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodesRequest) Reset()         { *m = GetNodesRequest{} }
func (m *GetNodesRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodesRequest) ProtoMessage()    {}
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{10}
}

func (m *GetNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodesRequest.Unmarshal(m, b)
}
func (m *GetNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodesRequest.Marshal(b, m, deterministic)
}
func (m *GetNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodesRequest.Merge(m, src)
}
func (m *GetNodesRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodesRequest.Size(m)
}
func (m *GetNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodesRequest proto.InternalMessageInfo

//* Corresponds to a node query based on the node address.
type SearchNodeByAddressRequest struct {
	//* The node address to search.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchNodeByAddressRequest) Reset()         { *m = SearchNodeByAddressRequest{} }
func (m *SearchNodeByAddressRequest) String() string { return proto.CompactTextString(m) }
func (*SearchNodeByAddressRequest) ProtoMessage()    {}
func (*SearchNodeByAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{11}
}

func (m *SearchNodeByAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNodeByAddressRequest.Unmarshal(m, b)
}
func (m *SearchNodeByAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNodeByAddressRequest.Marshal(b, m, deterministic)
}
func (m *SearchNodeByAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNodeByAddressRequest.Merge(m, src)
}
func (m *SearchNodeByAddressRequest) XXX_Size() int {
	return xxx_messageInfo_SearchNodeByAddressRequest.Size(m)
}
func (m *SearchNodeByAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNodeByAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNodeByAddressRequest proto.InternalMessageInfo

func (m *SearchNodeByAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//* Corresponds to a node query based on the node alias.
type SearchNodeByAliasRequest struct {
	//* The node alias substring to search.
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchNodeByAliasRequest) Reset()         { *m = SearchNodeByAliasRequest{} }
func (m *SearchNodeByAliasRequest) String() string { return proto.CompactTextString(m) }
func (*SearchNodeByAliasRequest) ProtoMessage()    {}
func (*SearchNodeByAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{12}
}

func (m *SearchNodeByAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNodeByAliasRequest.Unmarshal(m, b)
}
func (m *SearchNodeByAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNodeByAliasRequest.Marshal(b, m, deterministic)
}
func (m *SearchNodeByAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNodeByAliasRequest.Merge(m, src)
}
func (m *SearchNodeByAliasRequest) XXX_Size() int {
	return xxx_messageInfo_SearchNodeByAliasRequest.Size(m)
}
func (m *SearchNodeByAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNodeByAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNodeByAliasRequest proto.InternalMessageInfo

func (m *SearchNodeByAliasRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

//*
//A NodeInfoResponse is received in response to a node query.
//
//It contains all visible nodes corresponding to the query.
type NodeInfoResponse struct {
	//* The list of Lightning nodes matching the query.
	Nodes                []*NodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{13}
}

func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(m, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetNodes() []*NodeInfo {
	if m != nil {
		return m.Nodes
	}
	return nil
}

//* Corresponds to a request to create a peer connection with a node.
type ConnectNodeRequest struct {
	//* The address of the node to connect.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	//* The network location of the node.
	Hostport             string   `protobuf:"bytes,2,opt,name=hostport,proto3" json:"hostport,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectNodeRequest) Reset()         { *m = ConnectNodeRequest{} }
func (m *ConnectNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectNodeRequest) ProtoMessage()    {}
func (*ConnectNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{14}
}

func (m *ConnectNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectNodeRequest.Unmarshal(m, b)
}
func (m *ConnectNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectNodeRequest.Marshal(b, m, deterministic)
}
func (m *ConnectNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectNodeRequest.Merge(m, src)
}
func (m *ConnectNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectNodeRequest.Size(m)
}
func (m *ConnectNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectNodeRequest proto.InternalMessageInfo

func (m *ConnectNodeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConnectNodeRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

//* A ConnectNodeResponse is received in response to a ConnectNode request.
type ConnectNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectNodeResponse) Reset()         { *m = ConnectNodeResponse{} }
func (m *ConnectNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectNodeResponse) ProtoMessage()    {}
func (*ConnectNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{15}
}

func (m *ConnectNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectNodeResponse.Unmarshal(m, b)
}
func (m *ConnectNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectNodeResponse.Marshal(b, m, deterministic)
}
func (m *ConnectNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectNodeResponse.Merge(m, src)
}
func (m *ConnectNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectNodeResponse.Size(m)
}
func (m *ConnectNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectNodeResponse proto.InternalMessageInfo

//* Corresponds to a request to open a channel.
type OpenChannelRequest struct {
	//* The address of the node to open a channel to.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	//* The total amount to be committed to the channel (in millisatoshi).
	AmtMsat uint64 `protobuf:"varint,2,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//* The amount to be sent to the other party (in millisatoshi).
	PushAmtMsat uint64 `protobuf:"varint,3,opt,name=push_amt_msat,json=pushAmtMsat,proto3" json:"push_amt_msat,omitempty"`
	//* The minimum number of confirmations each input
	//of the channel funding transaction must have.
	//
	//In case of a negative value being provided, unconfirmed funds can be used.
	MinInputConfs int32 `protobuf:"varint,4,opt,name=min_input_confs,json=minInputConfs,proto3" json:"min_input_confs,omitempty"`
	//* The number of blocks the funding transaction should confirm by.
	//This is used for fee estimation.
	TargetConfirmationBlock uint32 `protobuf:"varint,5,opt,name=target_confirmation_block,json=targetConfirmationBlock,proto3" json:"target_confirmation_block,omitempty"`
	//* The fee rate (satoshis per virtual byte) the funding transaction should cost.
	SatPerVbyte          uint64   `protobuf:"varint,6,opt,name=sat_per_vbyte,json=satPerVbyte,proto3" json:"sat_per_vbyte,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{16}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OpenChannelRequest) GetAmtMsat() uint64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *OpenChannelRequest) GetPushAmtMsat() uint64 {
	if m != nil {
		return m.PushAmtMsat
	}
	return 0
}

func (m *OpenChannelRequest) GetMinInputConfs() int32 {
	if m != nil {
		return m.MinInputConfs
	}
	return 0
}

func (m *OpenChannelRequest) GetTargetConfirmationBlock() uint32 {
	if m != nil {
		return m.TargetConfirmationBlock
	}
	return 0
}

func (m *OpenChannelRequest) GetSatPerVbyte() uint64 {
	if m != nil {
		return m.SatPerVbyte
	}
	return 0
}

//* An OpenChannelResponse is received in response to an OpenChannel call.
type OpenChannelResponse struct {
	//* The channel funding transaction.
	FundingTxid string `protobuf:"bytes,1,opt,name=funding_txid,json=fundingTxid,proto3" json:"funding_txid,omitempty"`
	//* The output index of the funding transaction.
	OutputIndex          uint32   `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelResponse) Reset()         { *m = OpenChannelResponse{} }
func (m *OpenChannelResponse) String() string { return proto.CompactTextString(m) }
func (*OpenChannelResponse) ProtoMessage()    {}
func (*OpenChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{17}
}

func (m *OpenChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelResponse.Unmarshal(m, b)
}
func (m *OpenChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelResponse.Marshal(b, m, deterministic)
}
func (m *OpenChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelResponse.Merge(m, src)
}
func (m *OpenChannelResponse) XXX_Size() int {
	return xxx_messageInfo_OpenChannelResponse.Size(m)
}
func (m *OpenChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelResponse proto.InternalMessageInfo

func (m *OpenChannelResponse) GetFundingTxid() string {
	if m != nil {
		return m.FundingTxid
	}
	return ""
}

func (m *OpenChannelResponse) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

//* A message representing a contact of the application.
type ContactInfo struct {
	//* The node corresponding to the contact.
	Node *NodeInfo `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	//* The contact id.
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	//* A contact's chat nickname.
	DisplayName          string   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactInfo) Reset()         { *m = ContactInfo{} }
func (m *ContactInfo) String() string { return proto.CompactTextString(m) }
func (*ContactInfo) ProtoMessage()    {}
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{18}
}

func (m *ContactInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactInfo.Unmarshal(m, b)
}
func (m *ContactInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactInfo.Marshal(b, m, deterministic)
}
func (m *ContactInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactInfo.Merge(m, src)
}
func (m *ContactInfo) XXX_Size() int {
	return xxx_messageInfo_ContactInfo.Size(m)
}
func (m *ContactInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContactInfo proto.InternalMessageInfo

func (m *ContactInfo) GetNode() *NodeInfo {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *ContactInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ContactInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

//* Corresponds to a request to list all contacts.
type GetContactsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContactsRequest) Reset()         { *m = GetContactsRequest{} }
func (m *GetContactsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContactsRequest) ProtoMessage()    {}
func (*GetContactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{19}
}

func (m *GetContactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContactsRequest.Unmarshal(m, b)
}
func (m *GetContactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContactsRequest.Marshal(b, m, deterministic)
}
func (m *GetContactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContactsRequest.Merge(m, src)
}
func (m *GetContactsRequest) XXX_Size() int {
	return xxx_messageInfo_GetContactsRequest.Size(m)
}
func (m *GetContactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContactsRequest proto.InternalMessageInfo

//* A GetContactsResponse is received in response to a GetContacts rpc call.
type GetContactsResponse struct {
	//* The list of contacts in the database.
	Contacts             []*ContactInfo `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetContactsResponse) Reset()         { *m = GetContactsResponse{} }
func (m *GetContactsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContactsResponse) ProtoMessage()    {}
func (*GetContactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{20}
}

func (m *GetContactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContactsResponse.Unmarshal(m, b)
}
func (m *GetContactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContactsResponse.Marshal(b, m, deterministic)
}
func (m *GetContactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContactsResponse.Merge(m, src)
}
func (m *GetContactsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContactsResponse.Size(m)
}
func (m *GetContactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContactsResponse proto.InternalMessageInfo

func (m *GetContactsResponse) GetContacts() []*ContactInfo {
	if m != nil {
		return m.Contacts
	}
	return nil
}

//* Corresponds to a request to add a node as a contact.
type AddContactRequest struct {
	//* The node to add as a contact.
	Contact              *ContactInfo `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddContactRequest) Reset()         { *m = AddContactRequest{} }
func (m *AddContactRequest) String() string { return proto.CompactTextString(m) }
func (*AddContactRequest) ProtoMessage()    {}
func (*AddContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{21}
}

func (m *AddContactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddContactRequest.Unmarshal(m, b)
}
func (m *AddContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddContactRequest.Marshal(b, m, deterministic)
}
func (m *AddContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddContactRequest.Merge(m, src)
}
func (m *AddContactRequest) XXX_Size() int {
	return xxx_messageInfo_AddContactRequest.Size(m)
}
func (m *AddContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddContactRequest proto.InternalMessageInfo

func (m *AddContactRequest) GetContact() *ContactInfo {
	if m != nil {
		return m.Contact
	}
	return nil
}

//* A AddContactResponse is received in response to an AddContact rpc call.
type AddContactResponse struct {
	//* The newly added contact's information.
	Contact              *ContactInfo `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddContactResponse) Reset()         { *m = AddContactResponse{} }
func (m *AddContactResponse) String() string { return proto.CompactTextString(m) }
func (*AddContactResponse) ProtoMessage()    {}
func (*AddContactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{22}
}

func (m *AddContactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddContactResponse.Unmarshal(m, b)
}
func (m *AddContactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddContactResponse.Marshal(b, m, deterministic)
}
func (m *AddContactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddContactResponse.Merge(m, src)
}
func (m *AddContactResponse) XXX_Size() int {
	return xxx_messageInfo_AddContactResponse.Size(m)
}
func (m *AddContactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddContactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddContactResponse proto.InternalMessageInfo

func (m *AddContactResponse) GetContact() *ContactInfo {
	if m != nil {
		return m.Contact
	}
	return nil
}

//* Corresponds to a request to remove a contact.
type RemoveContactByIDRequest struct {
	//* The id of the contact to remove.
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContactByIDRequest) Reset()         { *m = RemoveContactByIDRequest{} }
func (m *RemoveContactByIDRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveContactByIDRequest) ProtoMessage()    {}
func (*RemoveContactByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{23}
}

func (m *RemoveContactByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContactByIDRequest.Unmarshal(m, b)
}
func (m *RemoveContactByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContactByIDRequest.Marshal(b, m, deterministic)
}
func (m *RemoveContactByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContactByIDRequest.Merge(m, src)
}
func (m *RemoveContactByIDRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveContactByIDRequest.Size(m)
}
func (m *RemoveContactByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContactByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContactByIDRequest proto.InternalMessageInfo

func (m *RemoveContactByIDRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

//* Corresponds to a request to remove a contact.
type RemoveContactByAddressRequest struct {
	//* The Lightning address of the contact to remove.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContactByAddressRequest) Reset()         { *m = RemoveContactByAddressRequest{} }
func (m *RemoveContactByAddressRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveContactByAddressRequest) ProtoMessage()    {}
func (*RemoveContactByAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{24}
}

func (m *RemoveContactByAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContactByAddressRequest.Unmarshal(m, b)
}
func (m *RemoveContactByAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContactByAddressRequest.Marshal(b, m, deterministic)
}
func (m *RemoveContactByAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContactByAddressRequest.Merge(m, src)
}
func (m *RemoveContactByAddressRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveContactByAddressRequest.Size(m)
}
func (m *RemoveContactByAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContactByAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContactByAddressRequest proto.InternalMessageInfo

func (m *RemoveContactByAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

//* A RemoveContactResponse is received in response to a RemoveContactBy* rpc call.
type RemoveContactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveContactResponse) Reset()         { *m = RemoveContactResponse{} }
func (m *RemoveContactResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveContactResponse) ProtoMessage()    {}
func (*RemoveContactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{25}
}

func (m *RemoveContactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveContactResponse.Unmarshal(m, b)
}
func (m *RemoveContactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveContactResponse.Marshal(b, m, deterministic)
}
func (m *RemoveContactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveContactResponse.Merge(m, src)
}
func (m *RemoveContactResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveContactResponse.Size(m)
}
func (m *RemoveContactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveContactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveContactResponse proto.InternalMessageInfo

//* A message representing a message of the application.
type Message struct {
	//* The unique id of the message.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* The discussion id this message is associated with.
	DiscussionId uint64 `protobuf:"varint,2,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	//* The Lightning address of the sender node.
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	//* The Lightning address of the receiver node.
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	//* Whether the message sender was verified.
	SenderVerified bool `protobuf:"varint,11,opt,name=sender_verified,json=senderVerified,proto3" json:"sender_verified,omitempty"`
	//* The message payload.
	Payload string `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	//* The amount paid over this message (in millisatoshi).
	AmtMsat int64 `protobuf:"varint,6,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//* The total routing fees paid for this message across all routes (in millisatoshi).
	//
	//This field is meaningful only for sent and estimated messages.
	TotalFeesMsat int64 `protobuf:"varint,7,opt,name=total_fees_msat,json=totalFeesMsat,proto3" json:"total_fees_msat,omitempty"`
	//* The time the message was sent.
	SentTimestamp *timestamp.Timestamp `protobuf:"bytes,8,opt,name=sent_timestamp,json=sentTimestamp,proto3" json:"sent_timestamp,omitempty"`
	//* The time the message was received.
	ReceivedTimestamp *timestamp.Timestamp `protobuf:"bytes,9,opt,name=received_timestamp,json=receivedTimestamp,proto3" json:"received_timestamp,omitempty"`
	//* The routes that fulfilled this message.
	//
	//This field is meaningful only for sent and estimated messages.
	PaymentRoutes []*PaymentRoute `protobuf:"bytes,10,rep,name=payment_routes,json=paymentRoutes,proto3" json:"payment_routes,omitempty"`
	//* The preimage belonging to the associated payment.
	//
	//This field is only meaningful for received messages and
	//messages sent successfully to non-group discussions.
	Preimage string `protobuf:"bytes,12,opt,name=preimage,proto3" json:"preimage,omitempty"`
	//* The payment request this message was paid to.
	//
	//If empty, corresponds to a spontaneous payment.
	PayReq               string   `protobuf:"bytes,13,opt,name=pay_req,json=payReq,proto3" json:"pay_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{26}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetDiscussionId() uint64 {
	if m != nil {
		return m.DiscussionId
	}
	return 0
}

func (m *Message) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Message) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Message) GetSenderVerified() bool {
	if m != nil {
		return m.SenderVerified
	}
	return false
}

func (m *Message) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Message) GetAmtMsat() int64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *Message) GetTotalFeesMsat() int64 {
	if m != nil {
		return m.TotalFeesMsat
	}
	return 0
}

func (m *Message) GetSentTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.SentTimestamp
	}
	return nil
}

func (m *Message) GetReceivedTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.ReceivedTimestamp
	}
	return nil
}

func (m *Message) GetPaymentRoutes() []*PaymentRoute {
	if m != nil {
		return m.PaymentRoutes
	}
	return nil
}

func (m *Message) GetPreimage() string {
	if m != nil {
		return m.Preimage
	}
	return ""
}

func (m *Message) GetPayReq() string {
	if m != nil {
		return m.PayReq
	}
	return ""
}

//* A message representing a route fulfilling a payment HTLC.
type PaymentRoute struct {
	//* The list of hops for this route.
	Hops []*PaymentHop `protobuf:"bytes,1,rep,name=hops,proto3" json:"hops,omitempty"`
	//* The total timelock of the route.
	TotalTimelock uint32 `protobuf:"varint,2,opt,name=total_timelock,json=totalTimelock,proto3" json:"total_timelock,omitempty"`
	//* The amount sent via this route, disregarding the route fees (in millisatoshi).
	RouteAmtMsat int64 `protobuf:"varint,3,opt,name=route_amt_msat,json=routeAmtMsat,proto3" json:"route_amt_msat,omitempty"`
	//* The fees paid for this route (in millisatoshi).
	RouteFeesMsat        int64    `protobuf:"varint,4,opt,name=route_fees_msat,json=routeFeesMsat,proto3" json:"route_fees_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRoute) Reset()         { *m = PaymentRoute{} }
func (m *PaymentRoute) String() string { return proto.CompactTextString(m) }
func (*PaymentRoute) ProtoMessage()    {}
func (*PaymentRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{27}
}

func (m *PaymentRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRoute.Unmarshal(m, b)
}
func (m *PaymentRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRoute.Marshal(b, m, deterministic)
}
func (m *PaymentRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRoute.Merge(m, src)
}
func (m *PaymentRoute) XXX_Size() int {
	return xxx_messageInfo_PaymentRoute.Size(m)
}
func (m *PaymentRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRoute.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRoute proto.InternalMessageInfo

func (m *PaymentRoute) GetHops() []*PaymentHop {
	if m != nil {
		return m.Hops
	}
	return nil
}

func (m *PaymentRoute) GetTotalTimelock() uint32 {
	if m != nil {
		return m.TotalTimelock
	}
	return 0
}

func (m *PaymentRoute) GetRouteAmtMsat() int64 {
	if m != nil {
		return m.RouteAmtMsat
	}
	return 0
}

func (m *PaymentRoute) GetRouteFeesMsat() int64 {
	if m != nil {
		return m.RouteFeesMsat
	}
	return 0
}

//* A message representing a hop of the route for sending a message.
type PaymentHop struct {
	//* The channel id.
	ChanId uint64 `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	//* The address of the hop node.
	HopAddress string `protobuf:"bytes,2,opt,name=hop_address,json=hopAddress,proto3" json:"hop_address,omitempty"`
	//* The amount to be forwarded by the hop (in millisatoshi).
	AmtToForwardMsat int64 `protobuf:"varint,3,opt,name=amt_to_forward_msat,json=amtToForwardMsat,proto3" json:"amt_to_forward_msat,omitempty"`
	//* The fee to be paid to the hop for forwarding the message (in millisatoshi).
	FeeMsat              int64    `protobuf:"varint,4,opt,name=fee_msat,json=feeMsat,proto3" json:"fee_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentHop) Reset()         { *m = PaymentHop{} }
func (m *PaymentHop) String() string { return proto.CompactTextString(m) }
func (*PaymentHop) ProtoMessage()    {}
func (*PaymentHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{28}
}

func (m *PaymentHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentHop.Unmarshal(m, b)
}
func (m *PaymentHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentHop.Marshal(b, m, deterministic)
}
func (m *PaymentHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentHop.Merge(m, src)
}
func (m *PaymentHop) XXX_Size() int {
	return xxx_messageInfo_PaymentHop.Size(m)
}
func (m *PaymentHop) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentHop.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentHop proto.InternalMessageInfo

func (m *PaymentHop) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *PaymentHop) GetHopAddress() string {
	if m != nil {
		return m.HopAddress
	}
	return ""
}

func (m *PaymentHop) GetAmtToForwardMsat() int64 {
	if m != nil {
		return m.AmtToForwardMsat
	}
	return 0
}

func (m *PaymentHop) GetFeeMsat() int64 {
	if m != nil {
		return m.FeeMsat
	}
	return 0
}

//* MessageOptions represents messaging options.
type MessageOptions struct {
	//* The maximum fee allowed for a message (in millisatoshi).
	FeeLimitMsat int64 `protobuf:"varint,1,opt,name=fee_limit_msat,json=feeLimitMsat,proto3" json:"fee_limit_msat,omitempty"`
	//* Whether to include the sender address when sending a message.
	Anonymous            bool     `protobuf:"varint,2,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageOptions) Reset()         { *m = MessageOptions{} }
func (m *MessageOptions) String() string { return proto.CompactTextString(m) }
func (*MessageOptions) ProtoMessage()    {}
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{29}
}

func (m *MessageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageOptions.Unmarshal(m, b)
}
func (m *MessageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageOptions.Marshal(b, m, deterministic)
}
func (m *MessageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageOptions.Merge(m, src)
}
func (m *MessageOptions) XXX_Size() int {
	return xxx_messageInfo_MessageOptions.Size(m)
}
func (m *MessageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_MessageOptions proto.InternalMessageInfo

func (m *MessageOptions) GetFeeLimitMsat() int64 {
	if m != nil {
		return m.FeeLimitMsat
	}
	return 0
}

func (m *MessageOptions) GetAnonymous() bool {
	if m != nil {
		return m.Anonymous
	}
	return false
}

//* Corresponds to a request to estimate a message.
type EstimateMessageRequest struct {
	//* The discussion id where the message is to be sent.
	DiscussionId uint64 `protobuf:"varint,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	//* The message payload (as a string).
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	//* The intended payment amount to the recipient of the message (in millisatoshi).
	AmtMsat int64 `protobuf:"varint,3,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//* The message option overrides for the current message.
	Options              *MessageOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EstimateMessageRequest) Reset()         { *m = EstimateMessageRequest{} }
func (m *EstimateMessageRequest) String() string { return proto.CompactTextString(m) }
func (*EstimateMessageRequest) ProtoMessage()    {}
func (*EstimateMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{30}
}

func (m *EstimateMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateMessageRequest.Unmarshal(m, b)
}
func (m *EstimateMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateMessageRequest.Marshal(b, m, deterministic)
}
func (m *EstimateMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateMessageRequest.Merge(m, src)
}
func (m *EstimateMessageRequest) XXX_Size() int {
	return xxx_messageInfo_EstimateMessageRequest.Size(m)
}
func (m *EstimateMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateMessageRequest proto.InternalMessageInfo

func (m *EstimateMessageRequest) GetDiscussionId() uint64 {
	if m != nil {
		return m.DiscussionId
	}
	return 0
}

func (m *EstimateMessageRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *EstimateMessageRequest) GetAmtMsat() int64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *EstimateMessageRequest) GetOptions() *MessageOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

//* A EstimateMessageResponse is received in response to a EstimateMessage rpc call.
type EstimateMessageResponse struct {
	//*
	//The probability of successful arrival of the message,
	//as reported by the Lightning daemon's mission control.
	SuccessProb float64 `protobuf:"fixed64,1,opt,name=success_prob,json=successProb,proto3" json:"success_prob,omitempty"`
	//* Contains the estimated route and fees for the requested message.
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateMessageResponse) Reset()         { *m = EstimateMessageResponse{} }
func (m *EstimateMessageResponse) String() string { return proto.CompactTextString(m) }
func (*EstimateMessageResponse) ProtoMessage()    {}
func (*EstimateMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{31}
}

func (m *EstimateMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateMessageResponse.Unmarshal(m, b)
}
func (m *EstimateMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateMessageResponse.Marshal(b, m, deterministic)
}
func (m *EstimateMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateMessageResponse.Merge(m, src)
}
func (m *EstimateMessageResponse) XXX_Size() int {
	return xxx_messageInfo_EstimateMessageResponse.Size(m)
}
func (m *EstimateMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateMessageResponse proto.InternalMessageInfo

func (m *EstimateMessageResponse) GetSuccessProb() float64 {
	if m != nil {
		return m.SuccessProb
	}
	return 0
}

func (m *EstimateMessageResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

//* Corresponds to a request to send a message.
type SendMessageRequest struct {
	//* The discussion id where the message is to be sent.
	DiscussionId uint64 `protobuf:"varint,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	//* The message payload (as a string).
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	//* The intended payment amount to the recipient of the message (in millisatoshi).
	AmtMsat int64 `protobuf:"varint,3,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//* A payment request (invoice) to pay to.
	//
	//If empty, a spontaneous message is sent.
	//If specified, discussion_id is not used and should not be specified.
	//Instead, the message will be sent to the discussion associated with
	//the recipient specified by the the payment request (which will be
	//created if it does not exist).
	//The discussion_id will be returned in the response.
	PayReq string `protobuf:"bytes,5,opt,name=pay_req,json=payReq,proto3" json:"pay_req,omitempty"`
	//* The message option overrides for the current message.
	Options              *MessageOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{32}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetDiscussionId() uint64 {
	if m != nil {
		return m.DiscussionId
	}
	return 0
}

func (m *SendMessageRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *SendMessageRequest) GetAmtMsat() int64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *SendMessageRequest) GetPayReq() string {
	if m != nil {
		return m.PayReq
	}
	return ""
}

func (m *SendMessageRequest) GetOptions() *MessageOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

//* A SendMessageResponse is received in response to a SendMessage rpc call.
type SendMessageResponse struct {
	//* The sent message.
	SentMessage          *Message `protobuf:"bytes,1,opt,name=sent_message,json=sentMessage,proto3" json:"sent_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{33}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func (m *SendMessageResponse) GetSentMessage() *Message {
	if m != nil {
		return m.SentMessage
	}
	return nil
}

//*
//Corresponds to a request to create a stream
//over which to be notified of received messages.
type SubscribeMessageRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeMessageRequest) Reset()         { *m = SubscribeMessageRequest{} }
func (m *SubscribeMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeMessageRequest) ProtoMessage()    {}
func (*SubscribeMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{34}
}

func (m *SubscribeMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeMessageRequest.Unmarshal(m, b)
}
func (m *SubscribeMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeMessageRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeMessageRequest.Merge(m, src)
}
func (m *SubscribeMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeMessageRequest.Size(m)
}
func (m *SubscribeMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeMessageRequest proto.InternalMessageInfo

//*
//A SubscribeMessageResponse is received in the stream returned in response to
//a SubscribeMessages rpc call, and represents a received message.
type SubscribeMessageResponse struct {
	//* The received message.
	ReceivedMessage      *Message `protobuf:"bytes,1,opt,name=received_message,json=receivedMessage,proto3" json:"received_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeMessageResponse) Reset()         { *m = SubscribeMessageResponse{} }
func (m *SubscribeMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeMessageResponse) ProtoMessage()    {}
func (*SubscribeMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{35}
}

func (m *SubscribeMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeMessageResponse.Unmarshal(m, b)
}
func (m *SubscribeMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeMessageResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeMessageResponse.Merge(m, src)
}
func (m *SubscribeMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeMessageResponse.Size(m)
}
func (m *SubscribeMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeMessageResponse proto.InternalMessageInfo

func (m *SubscribeMessageResponse) GetReceivedMessage() *Message {
	if m != nil {
		return m.ReceivedMessage
	}
	return nil
}

//* Represents the information for a specific discussion.
type DiscussionInfo struct {
	//* The discussion id.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* The list of participants in the discussion.
	Participants []string           `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	Options      *DiscussionOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	//* The id of the last read message in the discussion.
	LastReadMsgId uint64 `protobuf:"varint,4,opt,name=last_read_msg_id,json=lastReadMsgId,proto3" json:"last_read_msg_id,omitempty"`
	//* The id of the last discussion message.
	LastMsgId            uint64   `protobuf:"varint,5,opt,name=last_msg_id,json=lastMsgId,proto3" json:"last_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscussionInfo) Reset()         { *m = DiscussionInfo{} }
func (m *DiscussionInfo) String() string { return proto.CompactTextString(m) }
func (*DiscussionInfo) ProtoMessage()    {}
func (*DiscussionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{36}
}

func (m *DiscussionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscussionInfo.Unmarshal(m, b)
}
func (m *DiscussionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscussionInfo.Marshal(b, m, deterministic)
}
func (m *DiscussionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscussionInfo.Merge(m, src)
}
func (m *DiscussionInfo) XXX_Size() int {
	return xxx_messageInfo_DiscussionInfo.Size(m)
}
func (m *DiscussionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscussionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiscussionInfo proto.InternalMessageInfo

func (m *DiscussionInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DiscussionInfo) GetParticipants() []string {
	if m != nil {
		return m.Participants
	}
	return nil
}

func (m *DiscussionInfo) GetOptions() *DiscussionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *DiscussionInfo) GetLastReadMsgId() uint64 {
	if m != nil {
		return m.LastReadMsgId
	}
	return 0
}

func (m *DiscussionInfo) GetLastMsgId() uint64 {
	if m != nil {
		return m.LastMsgId
	}
	return 0
}

//* DiscussionOptions represents the per-discussion options.
type DiscussionOptions struct {
	//*
	//The maximum fee allowed for sending a message (in millisatoshi).
	//
	//If not set, the default fee limit, as defined in the app package, is used.
	FeeLimitMsat int64 `protobuf:"varint,1,opt,name=fee_limit_msat,json=feeLimitMsat,proto3" json:"fee_limit_msat,omitempty"`
	//* Whether to send as anonymous on this discussion.
	Anonymous            bool     `protobuf:"varint,2,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscussionOptions) Reset()         { *m = DiscussionOptions{} }
func (m *DiscussionOptions) String() string { return proto.CompactTextString(m) }
func (*DiscussionOptions) ProtoMessage()    {}
func (*DiscussionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{37}
}

func (m *DiscussionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscussionOptions.Unmarshal(m, b)
}
func (m *DiscussionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscussionOptions.Marshal(b, m, deterministic)
}
func (m *DiscussionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscussionOptions.Merge(m, src)
}
func (m *DiscussionOptions) XXX_Size() int {
	return xxx_messageInfo_DiscussionOptions.Size(m)
}
func (m *DiscussionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscussionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DiscussionOptions proto.InternalMessageInfo

func (m *DiscussionOptions) GetFeeLimitMsat() int64 {
	if m != nil {
		return m.FeeLimitMsat
	}
	return 0
}

func (m *DiscussionOptions) GetAnonymous() bool {
	if m != nil {
		return m.Anonymous
	}
	return false
}

//* Corresponds to a request to receive all discussion info.
type GetDiscussionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscussionsRequest) Reset()         { *m = GetDiscussionsRequest{} }
func (m *GetDiscussionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionsRequest) ProtoMessage()    {}
func (*GetDiscussionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{38}
}

func (m *GetDiscussionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionsRequest.Unmarshal(m, b)
}
func (m *GetDiscussionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionsRequest.Marshal(b, m, deterministic)
}
func (m *GetDiscussionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionsRequest.Merge(m, src)
}
func (m *GetDiscussionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionsRequest.Size(m)
}
func (m *GetDiscussionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionsRequest proto.InternalMessageInfo

//*
//A GetDiscussionsResponse is received in the stream returned in response
//to a GetDiscussions rpc call, and represents a discussion.
type GetDiscussionsResponse struct {
	Discussion           *DiscussionInfo `protobuf:"bytes,1,opt,name=discussion,proto3" json:"discussion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetDiscussionsResponse) Reset()         { *m = GetDiscussionsResponse{} }
func (m *GetDiscussionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionsResponse) ProtoMessage()    {}
func (*GetDiscussionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{39}
}

func (m *GetDiscussionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionsResponse.Unmarshal(m, b)
}
func (m *GetDiscussionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionsResponse.Marshal(b, m, deterministic)
}
func (m *GetDiscussionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionsResponse.Merge(m, src)
}
func (m *GetDiscussionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionsResponse.Size(m)
}
func (m *GetDiscussionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionsResponse proto.InternalMessageInfo

func (m *GetDiscussionsResponse) GetDiscussion() *DiscussionInfo {
	if m != nil {
		return m.Discussion
	}
	return nil
}

//*
//Corresponds to a request to create a stream over which to receive
//previously exchanged messages of the identified discussion.
type GetDiscussionHistoryByIDRequest struct {
	//* The discussion id of interest.
	Id                   uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PageOptions          *KeySetPageOptions `protobuf:"bytes,2,opt,name=page_options,json=pageOptions,proto3" json:"page_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetDiscussionHistoryByIDRequest) Reset()         { *m = GetDiscussionHistoryByIDRequest{} }
func (m *GetDiscussionHistoryByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionHistoryByIDRequest) ProtoMessage()    {}
func (*GetDiscussionHistoryByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{40}
}

func (m *GetDiscussionHistoryByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionHistoryByIDRequest.Unmarshal(m, b)
}
func (m *GetDiscussionHistoryByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionHistoryByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetDiscussionHistoryByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionHistoryByIDRequest.Merge(m, src)
}
func (m *GetDiscussionHistoryByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionHistoryByIDRequest.Size(m)
}
func (m *GetDiscussionHistoryByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionHistoryByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionHistoryByIDRequest proto.InternalMessageInfo

func (m *GetDiscussionHistoryByIDRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDiscussionHistoryByIDRequest) GetPageOptions() *KeySetPageOptions {
	if m != nil {
		return m.PageOptions
	}
	return nil
}

//*
//A GetDiscussionHistoryResponse is received in response to
//a GetHistory rpc call, and represents an exchanged message.
type GetDiscussionHistoryResponse struct {
	//* The exchanged message.
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscussionHistoryResponse) Reset()         { *m = GetDiscussionHistoryResponse{} }
func (m *GetDiscussionHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionHistoryResponse) ProtoMessage()    {}
func (*GetDiscussionHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{41}
}

func (m *GetDiscussionHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionHistoryResponse.Unmarshal(m, b)
}
func (m *GetDiscussionHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetDiscussionHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionHistoryResponse.Merge(m, src)
}
func (m *GetDiscussionHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionHistoryResponse.Size(m)
}
func (m *GetDiscussionHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionHistoryResponse proto.InternalMessageInfo

func (m *GetDiscussionHistoryResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

//*
//Corresponds to a request for statistics about the requested
//discussion, identified by its id.
type GetDiscussionStatisticsRequest struct {
	//* The discussion id.
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscussionStatisticsRequest) Reset()         { *m = GetDiscussionStatisticsRequest{} }
func (m *GetDiscussionStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionStatisticsRequest) ProtoMessage()    {}
func (*GetDiscussionStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{42}
}

func (m *GetDiscussionStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionStatisticsRequest.Unmarshal(m, b)
}
func (m *GetDiscussionStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetDiscussionStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionStatisticsRequest.Merge(m, src)
}
func (m *GetDiscussionStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionStatisticsRequest.Size(m)
}
func (m *GetDiscussionStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionStatisticsRequest proto.InternalMessageInfo

func (m *GetDiscussionStatisticsRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

//*
//A GetDiscussionStatisticsResponse is received in response to
//a GetDiscussionStatistics rpc call.
type GetDiscussionStatisticsResponse struct {
	//* The total amount sent in the discussion (in millisatoshi).
	AmtMsatSent uint64 `protobuf:"varint,1,opt,name=amt_msat_sent,json=amtMsatSent,proto3" json:"amt_msat_sent,omitempty"`
	//* The total amount received in the discussion (in millisatoshi).
	AmtMsatReceived uint64 `protobuf:"varint,2,opt,name=amt_msat_received,json=amtMsatReceived,proto3" json:"amt_msat_received,omitempty"`
	//* The total amount of fees for sent messages in the discussion (in millisatoshi).
	AmtMsatFees uint64 `protobuf:"varint,3,opt,name=amt_msat_fees,json=amtMsatFees,proto3" json:"amt_msat_fees,omitempty"`
	//* The total amount of sent messages in the discussion.
	MessagesSent uint64 `protobuf:"varint,4,opt,name=messages_sent,json=messagesSent,proto3" json:"messages_sent,omitempty"`
	//* The total amount of received messages in the discussion.
	MessagesReceived     uint64   `protobuf:"varint,5,opt,name=messages_received,json=messagesReceived,proto3" json:"messages_received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscussionStatisticsResponse) Reset()         { *m = GetDiscussionStatisticsResponse{} }
func (m *GetDiscussionStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscussionStatisticsResponse) ProtoMessage()    {}
func (*GetDiscussionStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{43}
}

func (m *GetDiscussionStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscussionStatisticsResponse.Unmarshal(m, b)
}
func (m *GetDiscussionStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscussionStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *GetDiscussionStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscussionStatisticsResponse.Merge(m, src)
}
func (m *GetDiscussionStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscussionStatisticsResponse.Size(m)
}
func (m *GetDiscussionStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscussionStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscussionStatisticsResponse proto.InternalMessageInfo

func (m *GetDiscussionStatisticsResponse) GetAmtMsatSent() uint64 {
	if m != nil {
		return m.AmtMsatSent
	}
	return 0
}

func (m *GetDiscussionStatisticsResponse) GetAmtMsatReceived() uint64 {
	if m != nil {
		return m.AmtMsatReceived
	}
	return 0
}

func (m *GetDiscussionStatisticsResponse) GetAmtMsatFees() uint64 {
	if m != nil {
		return m.AmtMsatFees
	}
	return 0
}

func (m *GetDiscussionStatisticsResponse) GetMessagesSent() uint64 {
	if m != nil {
		return m.MessagesSent
	}
	return 0
}

func (m *GetDiscussionStatisticsResponse) GetMessagesReceived() uint64 {
	if m != nil {
		return m.MessagesReceived
	}
	return 0
}

//* Corresponds to a request to add a discussion to database.
type AddDiscussionRequest struct {
	Discussion           *DiscussionInfo `protobuf:"bytes,1,opt,name=discussion,proto3" json:"discussion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddDiscussionRequest) Reset()         { *m = AddDiscussionRequest{} }
func (m *AddDiscussionRequest) String() string { return proto.CompactTextString(m) }
func (*AddDiscussionRequest) ProtoMessage()    {}
func (*AddDiscussionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{44}
}

func (m *AddDiscussionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDiscussionRequest.Unmarshal(m, b)
}
func (m *AddDiscussionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDiscussionRequest.Marshal(b, m, deterministic)
}
func (m *AddDiscussionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDiscussionRequest.Merge(m, src)
}
func (m *AddDiscussionRequest) XXX_Size() int {
	return xxx_messageInfo_AddDiscussionRequest.Size(m)
}
func (m *AddDiscussionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDiscussionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDiscussionRequest proto.InternalMessageInfo

func (m *AddDiscussionRequest) GetDiscussion() *DiscussionInfo {
	if m != nil {
		return m.Discussion
	}
	return nil
}

//* An AddDiscussionResponse is received in response to an AddDiscussion rpc call.
type AddDiscussionResponse struct {
	Discussion           *DiscussionInfo `protobuf:"bytes,1,opt,name=discussion,proto3" json:"discussion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddDiscussionResponse) Reset()         { *m = AddDiscussionResponse{} }
func (m *AddDiscussionResponse) String() string { return proto.CompactTextString(m) }
func (*AddDiscussionResponse) ProtoMessage()    {}
func (*AddDiscussionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{45}
}

func (m *AddDiscussionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDiscussionResponse.Unmarshal(m, b)
}
func (m *AddDiscussionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDiscussionResponse.Marshal(b, m, deterministic)
}
func (m *AddDiscussionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDiscussionResponse.Merge(m, src)
}
func (m *AddDiscussionResponse) XXX_Size() int {
	return xxx_messageInfo_AddDiscussionResponse.Size(m)
}
func (m *AddDiscussionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDiscussionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddDiscussionResponse proto.InternalMessageInfo

func (m *AddDiscussionResponse) GetDiscussion() *DiscussionInfo {
	if m != nil {
		return m.Discussion
	}
	return nil
}

//* Represents a request to update the last read discussion message.
type UpdateDiscussionLastReadRequest struct {
	//* The discussion id.
	DiscussionId uint64 `protobuf:"varint,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	//* The message id to mark as the last read.
	LastReadMsgId        uint64   `protobuf:"varint,2,opt,name=last_read_msg_id,json=lastReadMsgId,proto3" json:"last_read_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDiscussionLastReadRequest) Reset()         { *m = UpdateDiscussionLastReadRequest{} }
func (m *UpdateDiscussionLastReadRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDiscussionLastReadRequest) ProtoMessage()    {}
func (*UpdateDiscussionLastReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{46}
}

func (m *UpdateDiscussionLastReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDiscussionLastReadRequest.Unmarshal(m, b)
}
func (m *UpdateDiscussionLastReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDiscussionLastReadRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDiscussionLastReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDiscussionLastReadRequest.Merge(m, src)
}
func (m *UpdateDiscussionLastReadRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDiscussionLastReadRequest.Size(m)
}
func (m *UpdateDiscussionLastReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDiscussionLastReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDiscussionLastReadRequest proto.InternalMessageInfo

func (m *UpdateDiscussionLastReadRequest) GetDiscussionId() uint64 {
	if m != nil {
		return m.DiscussionId
	}
	return 0
}

func (m *UpdateDiscussionLastReadRequest) GetLastReadMsgId() uint64 {
	if m != nil {
		return m.LastReadMsgId
	}
	return 0
}

//*
//An UpdateDiscussionResponse is returned in reponse
//to an UpdateDiscussionLastRead request.
type UpdateDiscussionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDiscussionResponse) Reset()         { *m = UpdateDiscussionResponse{} }
func (m *UpdateDiscussionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDiscussionResponse) ProtoMessage()    {}
func (*UpdateDiscussionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{47}
}

func (m *UpdateDiscussionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDiscussionResponse.Unmarshal(m, b)
}
func (m *UpdateDiscussionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDiscussionResponse.Marshal(b, m, deterministic)
}
func (m *UpdateDiscussionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDiscussionResponse.Merge(m, src)
}
func (m *UpdateDiscussionResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDiscussionResponse.Size(m)
}
func (m *UpdateDiscussionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDiscussionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDiscussionResponse proto.InternalMessageInfo

//* Corresponds to a request to remove a discussion.
type RemoveDiscussionRequest struct {
	//* The id of the discussion to remove.
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDiscussionRequest) Reset()         { *m = RemoveDiscussionRequest{} }
func (m *RemoveDiscussionRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveDiscussionRequest) ProtoMessage()    {}
func (*RemoveDiscussionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{48}
}

func (m *RemoveDiscussionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDiscussionRequest.Unmarshal(m, b)
}
func (m *RemoveDiscussionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDiscussionRequest.Marshal(b, m, deterministic)
}
func (m *RemoveDiscussionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDiscussionRequest.Merge(m, src)
}
func (m *RemoveDiscussionRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveDiscussionRequest.Size(m)
}
func (m *RemoveDiscussionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDiscussionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDiscussionRequest proto.InternalMessageInfo

func (m *RemoveDiscussionRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

//* A RemoveDiscussionResponse is received in response to a RemoveDiscussion rpc call.
type RemoveDiscussionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDiscussionResponse) Reset()         { *m = RemoveDiscussionResponse{} }
func (m *RemoveDiscussionResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveDiscussionResponse) ProtoMessage()    {}
func (*RemoveDiscussionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0833c0247341df85, []int{49}
}

func (m *RemoveDiscussionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDiscussionResponse.Unmarshal(m, b)
}
func (m *RemoveDiscussionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDiscussionResponse.Marshal(b, m, deterministic)
}
func (m *RemoveDiscussionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDiscussionResponse.Merge(m, src)
}
func (m *RemoveDiscussionResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveDiscussionResponse.Size(m)
}
func (m *RemoveDiscussionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDiscussionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDiscussionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PageOptions)(nil), "services.PageOptions")
	proto.RegisterType((*KeySetPageOptions)(nil), "services.KeySetPageOptions")
	proto.RegisterType((*VersionRequest)(nil), "services.VersionRequest")
	proto.RegisterType((*Version)(nil), "services.Version")
	proto.RegisterType((*NodeInfo)(nil), "services.NodeInfo")
	proto.RegisterType((*SelfInfoRequest)(nil), "services.SelfInfoRequest")
	proto.RegisterType((*Chain)(nil), "services.Chain")
	proto.RegisterType((*SelfInfoResponse)(nil), "services.SelfInfoResponse")
	proto.RegisterType((*SelfBalanceRequest)(nil), "services.SelfBalanceRequest")
	proto.RegisterType((*SelfBalanceResponse)(nil), "services.SelfBalanceResponse")
	proto.RegisterType((*GetNodesRequest)(nil), "services.GetNodesRequest")
	proto.RegisterType((*SearchNodeByAddressRequest)(nil), "services.SearchNodeByAddressRequest")
	proto.RegisterType((*SearchNodeByAliasRequest)(nil), "services.SearchNodeByAliasRequest")
	proto.RegisterType((*NodeInfoResponse)(nil), "services.NodeInfoResponse")
	proto.RegisterType((*ConnectNodeRequest)(nil), "services.ConnectNodeRequest")
	proto.RegisterType((*ConnectNodeResponse)(nil), "services.ConnectNodeResponse")
	proto.RegisterType((*OpenChannelRequest)(nil), "services.OpenChannelRequest")
	proto.RegisterType((*OpenChannelResponse)(nil), "services.OpenChannelResponse")
	proto.RegisterType((*ContactInfo)(nil), "services.ContactInfo")
	proto.RegisterType((*GetContactsRequest)(nil), "services.GetContactsRequest")
	proto.RegisterType((*GetContactsResponse)(nil), "services.GetContactsResponse")
	proto.RegisterType((*AddContactRequest)(nil), "services.AddContactRequest")
	proto.RegisterType((*AddContactResponse)(nil), "services.AddContactResponse")
	proto.RegisterType((*RemoveContactByIDRequest)(nil), "services.RemoveContactByIDRequest")
	proto.RegisterType((*RemoveContactByAddressRequest)(nil), "services.RemoveContactByAddressRequest")
	proto.RegisterType((*RemoveContactResponse)(nil), "services.RemoveContactResponse")
	proto.RegisterType((*Message)(nil), "services.Message")
	proto.RegisterType((*PaymentRoute)(nil), "services.PaymentRoute")
	proto.RegisterType((*PaymentHop)(nil), "services.PaymentHop")
	proto.RegisterType((*MessageOptions)(nil), "services.MessageOptions")
	proto.RegisterType((*EstimateMessageRequest)(nil), "services.EstimateMessageRequest")
	proto.RegisterType((*EstimateMessageResponse)(nil), "services.EstimateMessageResponse")
	proto.RegisterType((*SendMessageRequest)(nil), "services.SendMessageRequest")
	proto.RegisterType((*SendMessageResponse)(nil), "services.SendMessageResponse")
	proto.RegisterType((*SubscribeMessageRequest)(nil), "services.SubscribeMessageRequest")
	proto.RegisterType((*SubscribeMessageResponse)(nil), "services.SubscribeMessageResponse")
	proto.RegisterType((*DiscussionInfo)(nil), "services.DiscussionInfo")
	proto.RegisterType((*DiscussionOptions)(nil), "services.DiscussionOptions")
	proto.RegisterType((*GetDiscussionsRequest)(nil), "services.GetDiscussionsRequest")
	proto.RegisterType((*GetDiscussionsResponse)(nil), "services.GetDiscussionsResponse")
	proto.RegisterType((*GetDiscussionHistoryByIDRequest)(nil), "services.GetDiscussionHistoryByIDRequest")
	proto.RegisterType((*GetDiscussionHistoryResponse)(nil), "services.GetDiscussionHistoryResponse")
	proto.RegisterType((*GetDiscussionStatisticsRequest)(nil), "services.GetDiscussionStatisticsRequest")
	proto.RegisterType((*GetDiscussionStatisticsResponse)(nil), "services.GetDiscussionStatisticsResponse")
	proto.RegisterType((*AddDiscussionRequest)(nil), "services.AddDiscussionRequest")
	proto.RegisterType((*AddDiscussionResponse)(nil), "services.AddDiscussionResponse")
	proto.RegisterType((*UpdateDiscussionLastReadRequest)(nil), "services.UpdateDiscussionLastReadRequest")
	proto.RegisterType((*UpdateDiscussionResponse)(nil), "services.UpdateDiscussionResponse")
	proto.RegisterType((*RemoveDiscussionRequest)(nil), "services.RemoveDiscussionRequest")
	proto.RegisterType((*RemoveDiscussionResponse)(nil), "services.RemoveDiscussionResponse")
}

func init() {
	proto.RegisterFile("rpc/services/rpc.proto", fileDescriptor_0833c0247341df85)
}

var fileDescriptor_0833c0247341df85 = []byte{
	// 2414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x19, 0xcb, 0x72, 0x1b, 0xc7,
	0x51, 0xe0, 0x0b, 0x60, 0x83, 0x00, 0x89, 0xe1, 0x0b, 0x82, 0x65, 0x51, 0x5e, 0x2b, 0xb6, 0x64,
	0x9b, 0x0f, 0x41, 0xb1, 0x94, 0x87, 0x93, 0x8a, 0x28, 0x45, 0x16, 0xcb, 0x92, 0x25, 0x2f, 0x24,
	0xd9, 0x91, 0x12, 0xad, 0x97, 0xc0, 0x10, 0xdc, 0x22, 0xb0, 0xbb, 0xda, 0x5d, 0x50, 0xa2, 0x52,
	0xf9, 0x8f, 0x7c, 0x41, 0x4e, 0x49, 0xaa, 0x72, 0xcb, 0x3d, 0xbf, 0x90, 0x7b, 0xaa, 0x72, 0xc9,
	0x21, 0x87, 0x9c, 0x72, 0x4f, 0xcf, 0x6b, 0x67, 0x76, 0x17, 0x10, 0x65, 0x25, 0x95, 0x0b, 0xb9,
	0xd3, 0xdd, 0xd3, 0xdd, 0xd3, 0xd3, 0xaf, 0x69, 0xc0, 0x5a, 0x14, 0x76, 0xb7, 0x63, 0x1a, 0x1d,
	0x7b, 0x5d, 0x1a, 0x6f, 0xe3, 0x62, 0x2b, 0x8c, 0x82, 0x24, 0x20, 0x15, 0x05, 0x6b, 0x6d, 0xf4,
	0x83, 0xa0, 0x3f, 0xa0, 0xdb, 0x1c, 0xbe, 0x3f, 0x3a, 0xd8, 0x4e, 0xbc, 0x21, 0x8d, 0x13, 0x77,
	0x18, 0x0a, 0xd2, 0xd6, 0xb5, 0xbe, 0x97, 0x1c, 0x8e, 0xf6, 0xb7, 0xba, 0xc1, 0x70, 0x7b, 0xf8,
	0xc2, 0x4b, 0x8e, 0x82, 0x17, 0xdb, 0xfd, 0x60, 0x93, 0x23, 0x37, 0x8f, 0xdd, 0x81, 0xd7, 0x73,
	0x93, 0x20, 0x8a, 0xb7, 0xd3, 0x4f, 0xb1, 0xcf, 0x7a, 0x0a, 0xd5, 0x07, 0x6e, 0x9f, 0xde, 0x0f,
	0x13, 0x2f, 0xf0, 0x63, 0xf2, 0x21, 0x54, 0xe3, 0x23, 0x2f, 0x74, 0x22, 0xda, 0xa5, 0x7e, 0xd2,
	0x2c, 0x5d, 0x28, 0x5d, 0x9a, 0xde, 0x9d, 0xfb, 0xfb, 0xdf, 0x36, 0xa6, 0x2e, 0x94, 0x6c, 0x60,
	0x28, 0x9b, 0x63, 0xc8, 0xfb, 0x30, 0x1f, 0xe2, 0x3e, 0x27, 0xf6, 0x5e, 0xd1, 0xe6, 0x54, 0x86,
	0xac, 0xc2, 0x10, 0x1d, 0x84, 0x5b, 0x5d, 0x68, 0x7c, 0x41, 0x4f, 0x3a, 0x34, 0x31, 0x45, 0xac,
	0x43, 0x79, 0xe0, 0xc6, 0x89, 0xe3, 0xf5, 0x38, 0xfb, 0x19, 0x7b, 0x8e, 0x2d, 0xf7, 0x7a, 0xe4,
	0x9d, 0x02, 0x4b, 0xcd, 0x8a, 0x34, 0xa1, 0x1c, 0xd1, 0x63, 0x1a, 0xc5, 0xb4, 0x39, 0x8d, 0xa8,
	0x8a, 0xad, 0x96, 0xd6, 0x12, 0xd4, 0x1f, 0xe3, 0x07, 0xf2, 0xb6, 0xe9, 0xf3, 0x11, 0x1a, 0xc5,
	0xfa, 0x25, 0x94, 0x25, 0x84, 0x6d, 0x3b, 0x16, 0x9f, 0x5c, 0xd8, 0xbc, 0xad, 0x96, 0x64, 0x0d,
	0xe6, 0xd0, 0x56, 0x43, 0x2f, 0xe1, 0xa2, 0xe6, 0x6d, 0xb9, 0x22, 0x1b, 0x50, 0x15, 0x5f, 0xce,
	0xa1, 0x1b, 0x1f, 0x72, 0x61, 0xf3, 0x36, 0x08, 0xd0, 0x1d, 0x84, 0x58, 0x36, 0x54, 0xbe, 0x0c,
	0x7a, 0x74, 0xcf, 0x3f, 0x08, 0xc8, 0x0a, 0xcc, 0xa2, 0x3d, 0xdd, 0x58, 0x32, 0x17, 0x0b, 0xb2,
	0x03, 0x65, 0xb7, 0xd7, 0x8b, 0x68, 0x1c, 0x0b, 0xde, 0xbb, 0x6b, 0x68, 0x19, 0x02, 0xf5, 0x67,
	0x4f, 0xdd, 0xcd, 0x57, 0x3b, 0x9b, 0x3f, 0xfc, 0xd5, 0xaf, 0xaf, 0x5d, 0xfb, 0xcd, 0x45, 0xb4,
	0x94, 0x22, 0xb3, 0x1a, 0xb0, 0xd8, 0xa1, 0x83, 0x03, 0xc6, 0x53, 0x1d, 0xe2, 0x3a, 0xcc, 0xde,
	0x3c, 0x74, 0x3d, 0x9f, 0xc9, 0xe8, 0xb2, 0x0f, 0x25, 0x83, 0x2f, 0xd8, 0xc1, 0x7c, 0x9a, 0xbc,
	0x08, 0xa2, 0x23, 0xa9, 0xbf, 0x5a, 0x5a, 0x47, 0xb0, 0xa4, 0x79, 0xc5, 0x21, 0x9a, 0x9c, 0x92,
	0x2d, 0x98, 0xf1, 0x70, 0xcd, 0x59, 0x54, 0xdb, 0x64, 0x4b, 0xf9, 0xd5, 0x96, 0x3a, 0x49, 0x7a,
	0x79, 0x9c, 0x0e, 0xdd, 0x60, 0x8e, 0x8b, 0x61, 0x07, 0x98, 0xc6, 0x1d, 0x8b, 0x7a, 0x07, 0x57,
	0xca, 0x96, 0x68, 0x6b, 0x05, 0x08, 0x13, 0xb6, 0xeb, 0x0e, 0x5c, 0xbf, 0x4b, 0x95, 0xee, 0x7f,
	0x9a, 0x86, 0xe5, 0x0c, 0x58, 0xaa, 0xb1, 0x03, 0x2b, 0x2f, 0xdc, 0xc1, 0x80, 0x26, 0x4e, 0x37,
	0xf0, 0x0f, 0xbc, 0x68, 0x48, 0x7b, 0x4e, 0xec, 0x4a, 0x37, 0xb3, 0x89, 0xc0, 0xdd, 0x54, 0xa8,
	0x8e, 0x9b, 0x90, 0xef, 0xc3, 0x9a, 0xdc, 0x31, 0xf2, 0xb3, 0x7b, 0x84, 0x83, 0x48, 0x7e, 0x8f,
	0x34, 0x92, 0xed, 0xfa, 0x04, 0x08, 0xea, 0xe7, 0xfb, 0x74, 0xe0, 0x0c, 0x82, 0xae, 0x3b, 0x70,
	0x86, 0x6c, 0xc7, 0x34, 0xf7, 0xb6, 0x25, 0x89, 0xb9, 0xcb, 0x10, 0xf7, 0x10, 0x8e, 0xc6, 0x59,
	0x56, 0xd4, 0x11, 0x1d, 0x06, 0x09, 0x15, 0xe4, 0x33, 0x9c, 0xbc, 0x21, 0x51, 0x36, 0xc7, 0x70,
	0xfa, 0x4f, 0x61, 0x3d, 0xa4, 0x7e, 0xcf, 0xf3, 0xfb, 0x4e, 0x80, 0x1f, 0xa6, 0x88, 0x59, 0xbe,
	0x67, 0x45, 0xa2, 0xef, 0xe3, 0x7f, 0x2d, 0xe6, 0x3a, 0x34, 0x33, 0xdb, 0x4c, 0x59, 0x73, 0x7c,
	0xdf, 0xaa, 0xb1, 0xcf, 0x90, 0x87, 0x56, 0x1b, 0xa1, 0xf5, 0x92, 0x64, 0x80, 0x47, 0x37, 0x84,
	0x95, 0xf9, 0x26, 0x92, 0xe2, 0xb4, 0xa8, 0x36, 0xac, 0xea, 0x1d, 0xa6, 0x9c, 0x0a, 0xdf, 0xb2,
	0x9c, 0x22, 0xb5, 0x14, 0xe6, 0x82, 0x9f, 0xd3, 0x84, 0xf9, 0x43, 0xac, 0xae, 0xf1, 0x2e, 0xb4,
	0x3a, 0xd4, 0x8d, 0xba, 0x87, 0x0c, 0xba, 0x7b, 0x72, 0x43, 0x38, 0xab, 0xc4, 0xa2, 0xd9, 0x52,
	0x2f, 0xe7, 0x9e, 0xb9, 0xbb, 0x82, 0x2e, 0xb4, 0x94, 0xf7, 0x72, 0xed, 0xe3, 0x3b, 0xd0, 0xcc,
	0x70, 0x63, 0xa1, 0xa2, 0x78, 0x8d, 0x8d, 0x23, 0xeb, 0x33, 0x58, 0x52, 0xfe, 0x99, 0xba, 0xd0,
	0x25, 0x98, 0xf5, 0x99, 0x8e, 0x48, 0x39, 0x3d, 0xde, 0x95, 0x6d, 0x41, 0x60, 0x7d, 0x0b, 0x04,
	0x5d, 0xc9, 0xa7, 0x5d, 0x7e, 0xa8, 0xb7, 0xd4, 0x9a, 0xb4, 0xa0, 0x72, 0x18, 0xc4, 0x49, 0x18,
	0x44, 0x2a, 0x51, 0xa4, 0x6b, 0x6b, 0x15, 0x96, 0x33, 0x12, 0x84, 0x8a, 0xd6, 0xbf, 0x4b, 0x40,
	0xd8, 0x15, 0xde, 0x54, 0x9e, 0x23, 0x24, 0x37, 0x73, 0x92, 0xb5, 0x8c, 0xb3, 0x50, 0x71, 0x87,
	0x89, 0xb8, 0xa1, 0x29, 0x7e, 0x43, 0x65, 0x5c, 0xf3, 0x9b, 0xb4, 0xa0, 0x16, 0x8e, 0xe2, 0x43,
	0x27, 0xc5, 0x0b, 0x27, 0xae, 0x32, 0xe0, 0x0d, 0x49, 0xf3, 0x01, 0x2c, 0x0e, 0x3d, 0xdf, 0xf1,
	0xfc, 0x70, 0x24, 0x02, 0x2b, 0xe6, 0xbe, 0x3b, 0x6b, 0xd7, 0x10, 0xbc, 0xc7, 0xa0, 0x2c, 0xa4,
	0x62, 0xf2, 0x23, 0x38, 0x9b, 0xb8, 0x51, 0x5f, 0x47, 0x9f, 0xcb, 0x12, 0xb2, 0xb3, 0x8f, 0x2e,
	0x75, 0xc4, 0x3d, 0xb7, 0x66, 0xaf, 0x0b, 0x82, 0x9b, 0x06, 0x7e, 0x97, 0xa1, 0x99, 0x1e, 0x28,
	0xca, 0x09, 0x69, 0xe4, 0x1c, 0xef, 0x9f, 0x24, 0x54, 0x7a, 0x6c, 0x15, 0x81, 0x0f, 0x68, 0xf4,
	0x98, 0x81, 0xb0, 0x94, 0x2c, 0x67, 0x8e, 0x2d, 0x6f, 0xec, 0x3d, 0x58, 0x38, 0x18, 0x09, 0xbf,
	0x4f, 0x5e, 0xca, 0xa4, 0x3f, 0x6f, 0x57, 0x25, 0xec, 0x21, 0x82, 0x18, 0x49, 0x30, 0x4a, 0x98,
	0xfa, 0x9e, 0xdf, 0xa3, 0x2f, 0xb9, 0x11, 0x6a, 0x76, 0x55, 0xc0, 0xf6, 0x18, 0xc8, 0x7a, 0x09,
	0x55, 0xd4, 0x2a, 0x71, 0xbb, 0x09, 0x4f, 0xbc, 0x98, 0xd0, 0xd8, 0x2d, 0xbf, 0x49, 0x42, 0x63,
	0x74, 0x98, 0xed, 0xa7, 0x50, 0x34, 0x37, 0x6e, 0x8a, 0x99, 0x12, 0x92, 0x7b, 0x5e, 0x1c, 0x0e,
	0xdc, 0x13, 0xc7, 0x77, 0x87, 0x54, 0xa6, 0xfb, 0xaa, 0x84, 0x7d, 0x89, 0x20, 0x96, 0xe2, 0x3e,
	0xe7, 0x26, 0x61, 0xc2, 0xd3, 0xd8, 0xb8, 0x03, 0xcb, 0x19, 0xa8, 0x3c, 0xec, 0x15, 0xa8, 0x74,
	0x25, 0x4c, 0x7a, 0xe8, 0xaa, 0x91, 0x3a, 0xf5, 0x01, 0xec, 0x94, 0x0c, 0xa3, 0xac, 0x81, 0x91,
	0x25, 0x71, 0xca, 0x59, 0xae, 0x43, 0x59, 0x12, 0xc8, 0x23, 0x8e, 0x67, 0x93, 0x9e, 0x45, 0x51,
	0x5b, 0xf7, 0x80, 0x98, 0xdc, 0xa4, 0x5a, 0x6f, 0xcd, 0xae, 0x0d, 0x4d, 0x96, 0x23, 0x8e, 0xa9,
	0xa4, 0xda, 0x3d, 0xd9, 0xbb, 0xa5, 0x74, 0x14, 0x36, 0x2d, 0xe5, 0x6d, 0x6a, 0x7d, 0x05, 0xef,
	0xe6, 0xf6, 0xe4, 0x32, 0xc7, 0x4e, 0x3e, 0x06, 0x4f, 0xad, 0x8f, 0xeb, 0xb0, 0x9a, 0x61, 0x99,
	0xc6, 0xda, 0x9f, 0x67, 0xa0, 0x7c, 0x0f, 0x29, 0xb0, 0x4d, 0x20, 0x75, 0xad, 0x0f, 0xbf, 0xdb,
	0xf7, 0xa1, 0x86, 0xf7, 0xd8, 0x1d, 0xc5, 0xac, 0xde, 0x3b, 0xea, 0xfa, 0xed, 0x05, 0x0d, 0xc4,
	0xa6, 0xe3, 0x13, 0x98, 0x8b, 0x31, 0xeb, 0xd2, 0x48, 0x5c, 0xfd, 0x84, 0x74, 0x20, 0x69, 0x30,
	0xb1, 0x56, 0x58, 0x67, 0xe4, 0x61, 0x13, 0xc1, 0x63, 0x6c, 0xb2, 0xea, 0x29, 0x1d, 0xd6, 0xd2,
	0x45, 0xb1, 0xdb, 0xc1, 0x95, 0x77, 0xe0, 0xd1, 0x5e, 0xb3, 0xca, 0x3b, 0x98, 0xba, 0x00, 0x3f,
	0x96, 0x50, 0x96, 0x20, 0x42, 0xf7, 0x64, 0x10, 0xb8, 0x3d, 0x1e, 0x8d, 0x98, 0x20, 0xe4, 0x12,
	0xbd, 0x54, 0x27, 0x88, 0xb9, 0x4c, 0xaf, 0x95, 0x26, 0x8a, 0x2d, 0x58, 0x4c, 0x82, 0x04, 0x4b,
	0xc3, 0x01, 0xa5, 0xb1, 0xae, 0x0f, 0x9a, 0xb2, 0xc6, 0xd1, 0xb7, 0x11, 0xcb, 0xe9, 0x6f, 0x00,
	0x13, 0x9f, 0x38, 0x69, 0x1f, 0xc9, 0x6b, 0x43, 0xb5, 0xdd, 0xda, 0x12, 0x9d, 0xe6, 0x96, 0xea,
	0x34, 0xb7, 0x1e, 0x2a, 0x0a, 0xbb, 0xc6, 0x76, 0xa4, 0x4b, 0xb2, 0x07, 0x44, 0x1e, 0xb2, 0x67,
	0xb0, 0x99, 0x3f, 0x95, 0x4d, 0x43, 0xed, 0xd2, 0xac, 0x7e, 0x02, 0x75, 0x3c, 0xeb, 0x90, 0x29,
	0x14, 0x61, 0xd4, 0x63, 0x7a, 0x07, 0x1e, 0x3c, 0x6b, 0xda, 0x4d, 0x1f, 0x08, 0xbc, 0xcd, 0xd0,
	0x76, 0x2d, 0x34, 0x56, 0x3c, 0x49, 0x87, 0x11, 0xf5, 0x86, 0xe8, 0x05, 0xcd, 0x05, 0x91, 0xa4,
	0xd5, 0x9a, 0xb5, 0x9b, 0x48, 0x8c, 0x55, 0xf0, 0x79, 0xb3, 0x26, 0x1a, 0x3d, 0x5c, 0xa2, 0x27,
	0x5a, 0x7f, 0x28, 0xc1, 0x82, 0xc9, 0x14, 0x4b, 0xcb, 0xcc, 0x61, 0x10, 0xaa, 0xb8, 0x5d, 0x29,
	0x88, 0xbe, 0x13, 0x84, 0x36, 0xa7, 0x20, 0xdf, 0x83, 0xba, 0x30, 0x36, 0x3b, 0x36, 0x4f, 0x9f,
	0x22, 0x63, 0x09, 0x1b, 0x3f, 0x94, 0x40, 0x72, 0x11, 0xea, 0xfc, 0x34, 0xd9, 0xec, 0x3d, 0x6d,
	0x2f, 0x70, 0xa8, 0x91, 0xbe, 0x05, 0x95, 0xbe, 0xb9, 0x19, 0x4e, 0x56, 0xe3, 0x60, 0x75, 0x63,
	0xd6, 0xef, 0x4a, 0x00, 0x5a, 0x13, 0x76, 0x2e, 0xd6, 0x9a, 0x18, 0x6d, 0x34, 0x5b, 0xa2, 0x47,
	0x7f, 0x0a, 0x55, 0x54, 0xd2, 0xc9, 0x76, 0xa0, 0xe3, 0xdd, 0x1a, 0x90, 0x50, 0xc6, 0x26, 0xd9,
	0x84, 0x65, 0xa6, 0x66, 0x12, 0x38, 0x07, 0x41, 0xf4, 0xc2, 0x8d, 0x7a, 0xa6, 0xc6, 0x4b, 0x88,
	0x7a, 0x18, 0xdc, 0x16, 0x08, 0xae, 0x35, 0xd6, 0x2c, 0xd4, 0xd7, 0x54, 0xb7, 0x8c, 0x6b, 0xae,
	0xe8, 0x43, 0xa8, 0xcb, 0x90, 0x54, 0x2d, 0x3f, 0x1a, 0x82, 0x11, 0x0f, 0x3c, 0xd6, 0x56, 0x0f,
	0x75, 0xc7, 0xb7, 0x80, 0xd0, 0xbb, 0x0c, 0xc8, 0x59, 0x9e, 0x83, 0x79, 0xd7, 0x0f, 0xfc, 0x93,
	0x61, 0x30, 0x12, 0x6a, 0x57, 0x6c, 0x0d, 0xb0, 0xfe, 0x58, 0x82, 0xb5, 0x9f, 0xc7, 0x68, 0x70,
	0x17, 0x1b, 0x16, 0xc1, 0x5e, 0xe5, 0x93, 0x42, 0xa0, 0x97, 0xc6, 0x04, 0xba, 0x11, 0x5d, 0x53,
	0x93, 0xa3, 0x6b, 0x7a, 0x7c, 0x74, 0xb5, 0xa1, 0x1c, 0x88, 0xb3, 0xf0, 0xc3, 0x56, 0xdb, 0x4d,
	0xed, 0x1d, 0xd9, 0xb3, 0xda, 0x8a, 0xd0, 0x3a, 0x81, 0xf5, 0x82, 0xbe, 0x32, 0x1d, 0x5f, 0x86,
	0x85, 0x78, 0xd4, 0xc5, 0xcd, 0xb1, 0x83, 0xf1, 0xb1, 0xcf, 0xf5, 0x2d, 0xa5, 0x52, 0xab, 0x12,
	0xf7, 0x00, 0x51, 0xe4, 0x2a, 0x94, 0x87, 0x62, 0x37, 0x57, 0xbb, 0xda, 0x6e, 0x14, 0x24, 0x6b,
	0x75, 0x25, 0xa5, 0xf5, 0x97, 0x12, 0x6b, 0xcb, 0xfd, 0xde, 0xff, 0xdd, 0x4e, 0x46, 0xb0, 0xcd,
	0x9a, 0xc1, 0xf6, 0x56, 0x06, 0xec, 0xb0, 0x47, 0x84, 0x71, 0x08, 0x69, 0xbc, 0xcf, 0xd0, 0x78,
	0x2c, 0x51, 0x28, 0xb3, 0x94, 0x4e, 0x33, 0x4b, 0x95, 0x91, 0x4b, 0xa0, 0x75, 0x16, 0xd6, 0x3b,
	0xa3, 0xfd, 0xb8, 0x1b, 0x79, 0xfb, 0x39, 0x37, 0xc2, 0x86, 0xb1, 0x59, 0x44, 0x49, 0xa1, 0xb7,
	0x60, 0x29, 0xcd, 0x75, 0x6f, 0x2c, 0x78, 0x51, 0x6d, 0x51, 0xc2, 0xff, 0x5a, 0x82, 0xfa, 0x2d,
	0x6d, 0x6c, 0xd6, 0xc8, 0x4c, 0x28, 0xa2, 0xe4, 0x23, 0x58, 0x08, 0xdd, 0x28, 0xf1, 0xba, 0x5e,
	0xe8, 0xfa, 0x89, 0x78, 0x87, 0xcd, 0x0b, 0x8a, 0x6f, 0x4b, 0x76, 0x06, 0x87, 0x11, 0x9f, 0x1a,
	0x77, 0x9a, 0xeb, 0xf4, 0x8e, 0xd6, 0x49, 0x8b, 0xcb, 0xdb, 0x17, 0x0b, 0xd3, 0x12, 0x7f, 0x88,
	0x47, 0xd4, 0x65, 0xc1, 0xde, 0x67, 0x1e, 0x21, 0x1e, 0x3d, 0x35, 0x06, 0xb7, 0x11, 0x7c, 0x2f,
	0xee, 0xa3, 0x4b, 0x9c, 0x87, 0x2a, 0x27, 0x94, 0x34, 0xe2, 0x91, 0x33, 0xcf, 0x40, 0x1c, 0x6f,
	0x7d, 0x0d, 0x8d, 0x82, 0x98, 0xff, 0x49, 0xcc, 0x63, 0xd9, 0xc7, 0x26, 0x4b, 0xf3, 0x4e, 0xbb,
	0xaf, 0x27, 0xb0, 0x96, 0x47, 0xc8, 0x8b, 0xfa, 0x19, 0x80, 0x76, 0x67, 0x79, 0x45, 0xcd, 0x71,
	0xe6, 0xc8, 0xf4, 0x3b, 0xc6, 0x1e, 0x8c, 0xdb, 0x8d, 0x0c, 0xef, 0x3b, 0x5e, 0x9c, 0x04, 0xd1,
	0xc9, 0x1b, 0x74, 0x3e, 0xe4, 0xa7, 0xec, 0xd2, 0xfa, 0xd4, 0x51, 0xb7, 0x31, 0x95, 0xbf, 0x8d,
	0xc2, 0x34, 0x04, 0x3b, 0x79, 0xbd, 0xb0, 0xbe, 0x80, 0x73, 0xe3, 0x44, 0xa7, 0x87, 0xfb, 0x58,
	0x27, 0x83, 0x49, 0xce, 0xa7, 0x93, 0xc0, 0x0e, 0x9c, 0xcf, 0x30, 0xeb, 0x24, 0xd8, 0xcf, 0x63,
	0x42, 0xea, 0xa6, 0x7d, 0x58, 0xae, 0x61, 0xb2, 0xfe, 0x51, 0xca, 0x1d, 0xdd, 0xdc, 0x22, 0x55,
	0xc0, 0x87, 0x80, 0x4a, 0x02, 0x4e, 0xac, 0x46, 0x44, 0xf8, 0x10, 0x90, 0x19, 0xa0, 0xc3, 0x66,
	0x43, 0x1f, 0x41, 0x23, 0xa5, 0x51, 0x21, 0x20, 0x9b, 0xaf, 0x45, 0x49, 0x67, 0x4b, 0x70, 0x86,
	0x1f, 0x2b, 0x80, 0xea, 0x81, 0x23, 0xe9, 0x58, 0xf5, 0x63, 0x79, 0x4b, 0x1e, 0x2a, 0x16, 0x32,
	0x85, 0x97, 0x2e, 0x28, 0x20, 0x17, 0xfa, 0x31, 0x34, 0x52, 0xa2, 0x54, 0xa8, 0x70, 0xd5, 0x25,
	0x85, 0x50, 0x52, 0xad, 0x6f, 0x60, 0x05, 0xeb, 0x9e, 0x3e, 0xa8, 0xb2, 0xc8, 0x7f, 0xef, 0x3d,
	0x5f, 0xc1, 0x6a, 0x8e, 0xb3, 0x34, 0xdc, 0x0f, 0xbe, 0x0b, 0xeb, 0x0c, 0xcb, 0x00, 0x36, 0x1e,
	0x85, 0x3d, 0x2c, 0x23, 0x9a, 0xe6, 0xae, 0x8c, 0xcf, 0xef, 0x94, 0xd9, 0xc7, 0xc5, 0xfb, 0xd4,
	0x98, 0x78, 0xb7, 0x5a, 0xd0, 0xcc, 0x0b, 0x4c, 0x1b, 0xee, 0x2b, 0xb0, 0x2e, 0x3a, 0xf1, 0xa2,
	0xf1, 0x26, 0xbd, 0x07, 0x5a, 0xea, 0x0d, 0x51, 0x64, 0xd7, 0xfe, 0xfd, 0x0c, 0x2c, 0xaa, 0x27,
	0x5b, 0x47, 0xd8, 0x82, 0xfc, 0x18, 0x00, 0xbd, 0x30, 0x9d, 0xe0, 0x69, 0x1b, 0x65, 0xc7, 0x7c,
	0xad, 0x46, 0x01, 0x63, 0x9d, 0x21, 0xb7, 0xa1, 0x8a, 0x9b, 0xd5, 0x00, 0x8c, 0x9c, 0xd5, 0x34,
	0xb9, 0x01, 0x5b, 0xab, 0x35, 0x0e, 0x25, 0x4f, 0x79, 0x86, 0xdc, 0x87, 0xba, 0xe4, 0x23, 0x87,
	0x58, 0xe4, 0x5c, 0x96, 0x3e, 0x3b, 0xf2, 0x6a, 0xbd, 0x3b, 0x01, 0x9b, 0x32, 0xbc, 0x09, 0x15,
	0x35, 0x5f, 0x31, 0xb5, 0xca, 0xcd, 0x5c, 0x4c, 0xad, 0xf2, 0xb3, 0x0f, 0x64, 0xf2, 0x0b, 0x56,
	0x12, 0x0b, 0x13, 0x19, 0x72, 0xd1, 0x14, 0x3e, 0x69, 0x60, 0x73, 0x0a, 0xeb, 0x47, 0xd0, 0x28,
	0x8c, 0x67, 0x88, 0x35, 0x81, 0xb1, 0x31, 0xbb, 0x39, 0x85, 0xed, 0x5d, 0xfe, 0x6e, 0x57, 0x33,
	0x12, 0xd3, 0x88, 0xc5, 0xe1, 0x8c, 0x69, 0xc4, 0x71, 0x83, 0x95, 0x33, 0xed, 0x67, 0x50, 0x97,
	0xe3, 0x05, 0xe5, 0x2c, 0xc8, 0xdf, 0x18, 0x3a, 0x98, 0xfc, 0x8b, 0x23, 0x18, 0x93, 0xff, 0x98,
	0x49, 0x05, 0xf2, 0xff, 0xe7, 0x14, 0x0a, 0x10, 0x4f, 0x4c, 0x43, 0x80, 0xf1, 0xd0, 0x37, 0x05,
	0x14, 0xa7, 0x02, 0xa6, 0x80, 0x31, 0xd3, 0x01, 0x34, 0xc7, 0x1e, 0x80, 0x7e, 0x9e, 0x13, 0xa3,
	0x32, 0x14, 0x46, 0x00, 0xad, 0x73, 0xe3, 0x91, 0x29, 0xab, 0x27, 0xd0, 0x28, 0x3c, 0xcd, 0xcd,
	0x0b, 0x9b, 0xf4, 0x6e, 0x6f, 0x6d, 0x4c, 0xa0, 0x31, 0x78, 0xf7, 0x60, 0x6d, 0xfc, 0x13, 0x9e,
	0x7c, 0x38, 0x51, 0x40, 0xce, 0xdb, 0x4e, 0x97, 0xd2, 0xfe, 0xed, 0x54, 0xfa, 0x52, 0x50, 0xd6,
	0xfe, 0x06, 0x16, 0x73, 0x4d, 0x33, 0xb9, 0xa0, 0x19, 0x8d, 0xef, 0xff, 0x5b, 0xef, 0xbd, 0x86,
	0xc2, 0x74, 0x44, 0xa3, 0x9b, 0xcc, 0x46, 0x73, 0xbe, 0x53, 0xce, 0x46, 0x73, 0xa1, 0x05, 0x45,
	0x6e, 0xcf, 0x30, 0x5a, 0x72, 0xbd, 0x62, 0x4c, 0x0c, 0x3d, 0x26, 0xf4, 0x98, 0x2d, 0xeb, 0x75,
	0x24, 0x8a, 0xfb, 0x4e, 0xa9, 0xfd, 0xaf, 0x19, 0xb3, 0xa7, 0x52, 0xd6, 0xf9, 0x9a, 0x27, 0x25,
	0xa3, 0xed, 0x21, 0x1b, 0x19, 0x87, 0x2b, 0x76, 0x4a, 0xad, 0x0b, 0x93, 0x09, 0xb4, 0x38, 0xf2,
	0x1c, 0x9a, 0x93, 0x7a, 0x1e, 0x72, 0x79, 0x02, 0x87, 0x62, 0x5f, 0xd4, 0xfa, 0xe0, 0xf5, 0xa4,
	0x19, 0x91, 0x21, 0xac, 0x4f, 0xe8, 0x35, 0xc8, 0xa5, 0x09, 0x6c, 0x0a, 0x1d, 0x4c, 0xeb, 0xf2,
	0x1b, 0x50, 0xa6, 0x77, 0x66, 0x43, 0x2d, 0x53, 0x9a, 0xc9, 0xf9, 0x4c, 0x84, 0x15, 0x0a, 0x9a,
	0xe9, 0xc2, 0x63, 0x6b, 0x3a, 0xf2, 0x3c, 0x2a, 0x96, 0x4a, 0x55, 0x9b, 0x4d, 0xc3, 0x9d, 0x52,
	0xbf, 0x4d, 0xb7, 0x98, 0x58, 0x79, 0xcf, 0x90, 0xa7, 0xb0, 0x94, 0x2f, 0xa4, 0xa6, 0xcf, 0x4d,
	0xa8, 0xcb, 0x2d, 0xeb, 0x75, 0x24, 0x8a, 0xf9, 0xee, 0xd5, 0x27, 0x57, 0xfa, 0x5e, 0xc2, 0xe6,
	0x35, 0xfd, 0xc8, 0x1d, 0x7a, 0xaf, 0x28, 0xff, 0x29, 0xb1, 0x7b, 0xe5, 0xaa, 0xcf, 0xff, 0x6c,
	0xee, 0xbb, 0xdd, 0x23, 0x0c, 0x85, 0x6d, 0xf3, 0xa7, 0xca, 0xfd, 0x39, 0x3e, 0xde, 0xb9, 0xfa,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0xe3, 0x9d, 0x95, 0xc1, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeInfoServiceClient is the client API for NodeInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeInfoServiceClient interface {
	//*
	//Returns version information about the current daemon.
	GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*Version, error)
	//*
	//Returns info about the current underlying node.
	GetSelfInfo(ctx context.Context, in *SelfInfoRequest, opts ...grpc.CallOption) (*SelfInfoResponse, error)
	//*
	//Returns the balance of the current underlying node.
	GetSelfBalance(ctx context.Context, in *SelfBalanceRequest, opts ...grpc.CallOption) (*SelfBalanceResponse, error)
	//*
	//Lists all nodes on the Lightning network.
	//
	//Returns a list of all nodes visible to the underlying Lightning node,
	//including the address of the current node.
	//Nodes with private channels are not visible if not directly connected to
	//the underlying node.
	GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	//*
	//Searches for a Lighting node based on their Lightning address.
	//
	//Returns a list of all nodes with that address, which will be at most 1.
	//The node must be visible from the underlying node.
	SearchNodeByAddress(ctx context.Context, in *SearchNodeByAddressRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	//*
	//Searches for a Lightning node based on their Lightning alias.
	//
	//Returns a list of all nodes with that alias visible from the underlying node.
	SearchNodeByAlias(ctx context.Context, in *SearchNodeByAliasRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	//*
	//Connects a node as a peer.
	ConnectNode(ctx context.Context, in *ConnectNodeRequest, opts ...grpc.CallOption) (*ConnectNodeResponse, error)
}

type nodeInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeInfoServiceClient(cc grpc.ClientConnInterface) NodeInfoServiceClient {
	return &nodeInfoServiceClient{cc}
}

func (c *nodeInfoServiceClient) GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) GetSelfInfo(ctx context.Context, in *SelfInfoRequest, opts ...grpc.CallOption) (*SelfInfoResponse, error) {
	out := new(SelfInfoResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/GetSelfInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) GetSelfBalance(ctx context.Context, in *SelfBalanceRequest, opts ...grpc.CallOption) (*SelfBalanceResponse, error) {
	out := new(SelfBalanceResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/GetSelfBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/GetNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) SearchNodeByAddress(ctx context.Context, in *SearchNodeByAddressRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/SearchNodeByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) SearchNodeByAlias(ctx context.Context, in *SearchNodeByAliasRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/SearchNodeByAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoServiceClient) ConnectNode(ctx context.Context, in *ConnectNodeRequest, opts ...grpc.CallOption) (*ConnectNodeResponse, error) {
	out := new(ConnectNodeResponse)
	err := c.cc.Invoke(ctx, "/services.NodeInfoService/ConnectNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeInfoServiceServer is the server API for NodeInfoService service.
type NodeInfoServiceServer interface {
	//*
	//Returns version information about the current daemon.
	GetVersion(context.Context, *VersionRequest) (*Version, error)
	//*
	//Returns info about the current underlying node.
	GetSelfInfo(context.Context, *SelfInfoRequest) (*SelfInfoResponse, error)
	//*
	//Returns the balance of the current underlying node.
	GetSelfBalance(context.Context, *SelfBalanceRequest) (*SelfBalanceResponse, error)
	//*
	//Lists all nodes on the Lightning network.
	//
	//Returns a list of all nodes visible to the underlying Lightning node,
	//including the address of the current node.
	//Nodes with private channels are not visible if not directly connected to
	//the underlying node.
	GetNodes(context.Context, *GetNodesRequest) (*NodeInfoResponse, error)
	//*
	//Searches for a Lighting node based on their Lightning address.
	//
	//Returns a list of all nodes with that address, which will be at most 1.
	//The node must be visible from the underlying node.
	SearchNodeByAddress(context.Context, *SearchNodeByAddressRequest) (*NodeInfoResponse, error)
	//*
	//Searches for a Lightning node based on their Lightning alias.
	//
	//Returns a list of all nodes with that alias visible from the underlying node.
	SearchNodeByAlias(context.Context, *SearchNodeByAliasRequest) (*NodeInfoResponse, error)
	//*
	//Connects a node as a peer.
	ConnectNode(context.Context, *ConnectNodeRequest) (*ConnectNodeResponse, error)
}

// UnimplementedNodeInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeInfoServiceServer struct {
}

func (*UnimplementedNodeInfoServiceServer) GetVersion(ctx context.Context, req *VersionRequest) (*Version, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedNodeInfoServiceServer) GetSelfInfo(ctx context.Context, req *SelfInfoRequest) (*SelfInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfInfo not implemented")
}
func (*UnimplementedNodeInfoServiceServer) GetSelfBalance(ctx context.Context, req *SelfBalanceRequest) (*SelfBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfBalance not implemented")
}
func (*UnimplementedNodeInfoServiceServer) GetNodes(ctx context.Context, req *GetNodesRequest) (*NodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodes not implemented")
}
func (*UnimplementedNodeInfoServiceServer) SearchNodeByAddress(ctx context.Context, req *SearchNodeByAddressRequest) (*NodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeByAddress not implemented")
}
func (*UnimplementedNodeInfoServiceServer) SearchNodeByAlias(ctx context.Context, req *SearchNodeByAliasRequest) (*NodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeByAlias not implemented")
}
func (*UnimplementedNodeInfoServiceServer) ConnectNode(ctx context.Context, req *ConnectNodeRequest) (*ConnectNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectNode not implemented")
}

func RegisterNodeInfoServiceServer(s *grpc.Server, srv NodeInfoServiceServer) {
	s.RegisterService(&_NodeInfoService_serviceDesc, srv)
}

func _NodeInfoService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).GetVersion(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_GetSelfInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelfInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).GetSelfInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/GetSelfInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).GetSelfInfo(ctx, req.(*SelfInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_GetSelfBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelfBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).GetSelfBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/GetSelfBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).GetSelfBalance(ctx, req.(*SelfBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_GetNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).GetNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/GetNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).GetNodes(ctx, req.(*GetNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_SearchNodeByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchNodeByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).SearchNodeByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/SearchNodeByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).SearchNodeByAddress(ctx, req.(*SearchNodeByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_SearchNodeByAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchNodeByAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).SearchNodeByAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/SearchNodeByAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).SearchNodeByAlias(ctx, req.(*SearchNodeByAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfoService_ConnectNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServiceServer).ConnectNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.NodeInfoService/ConnectNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServiceServer).ConnectNode(ctx, req.(*ConnectNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.NodeInfoService",
	HandlerType: (*NodeInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _NodeInfoService_GetVersion_Handler,
		},
		{
			MethodName: "GetSelfInfo",
			Handler:    _NodeInfoService_GetSelfInfo_Handler,
		},
		{
			MethodName: "GetSelfBalance",
			Handler:    _NodeInfoService_GetSelfBalance_Handler,
		},
		{
			MethodName: "GetNodes",
			Handler:    _NodeInfoService_GetNodes_Handler,
		},
		{
			MethodName: "SearchNodeByAddress",
			Handler:    _NodeInfoService_SearchNodeByAddress_Handler,
		},
		{
			MethodName: "SearchNodeByAlias",
			Handler:    _NodeInfoService_SearchNodeByAlias_Handler,
		},
		{
			MethodName: "ConnectNode",
			Handler:    _NodeInfoService_ConnectNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/services/rpc.proto",
}

// ChannelServiceClient is the client API for ChannelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChannelServiceClient interface {
	//*
	//Opens a channel to a node.
	//
	//Returns immediately after the funding transaction has been published,
	//but does not wait for the channel to be considered open.
	OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error)
}

type channelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChannelServiceClient(cc grpc.ClientConnInterface) ChannelServiceClient {
	return &channelServiceClient{cc}
}

func (c *channelServiceClient) OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error) {
	out := new(OpenChannelResponse)
	err := c.cc.Invoke(ctx, "/services.ChannelService/OpenChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChannelServiceServer is the server API for ChannelService service.
type ChannelServiceServer interface {
	//*
	//Opens a channel to a node.
	//
	//Returns immediately after the funding transaction has been published,
	//but does not wait for the channel to be considered open.
	OpenChannel(context.Context, *OpenChannelRequest) (*OpenChannelResponse, error)
}

// UnimplementedChannelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChannelServiceServer struct {
}

func (*UnimplementedChannelServiceServer) OpenChannel(ctx context.Context, req *OpenChannelRequest) (*OpenChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenChannel not implemented")
}

func RegisterChannelServiceServer(s *grpc.Server, srv ChannelServiceServer) {
	s.RegisterService(&_ChannelService_serviceDesc, srv)
}

func _ChannelService_OpenChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelServiceServer).OpenChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ChannelService/OpenChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelServiceServer).OpenChannel(ctx, req.(*OpenChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChannelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ChannelService",
	HandlerType: (*ChannelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenChannel",
			Handler:    _ChannelService_OpenChannel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/services/rpc.proto",
}

// ContactServiceClient is the client API for ContactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactServiceClient interface {
	//*
	//Lists all current contacts.
	//
	//Returns a list of all contacts currently in the database.
	GetContacts(ctx context.Context, in *GetContactsRequest, opts ...grpc.CallOption) (*GetContactsResponse, error)
	//*
	//Adds a node as a contact.
	//
	//Accepts a node and adds them as a contact in the database.
	AddContact(ctx context.Context, in *AddContactRequest, opts ...grpc.CallOption) (*AddContactResponse, error)
	//*
	//Removes a contact.
	//
	//Accepts a contact id and removes it from the database.
	RemoveContactByID(ctx context.Context, in *RemoveContactByIDRequest, opts ...grpc.CallOption) (*RemoveContactResponse, error)
	//*
	//Removes a contact.
	//
	//Accepts a contact address and removes it from the database.
	RemoveContactByAddress(ctx context.Context, in *RemoveContactByAddressRequest, opts ...grpc.CallOption) (*RemoveContactResponse, error)
}

type contactServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContactServiceClient(cc grpc.ClientConnInterface) ContactServiceClient {
	return &contactServiceClient{cc}
}

func (c *contactServiceClient) GetContacts(ctx context.Context, in *GetContactsRequest, opts ...grpc.CallOption) (*GetContactsResponse, error) {
	out := new(GetContactsResponse)
	err := c.cc.Invoke(ctx, "/services.ContactService/GetContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) AddContact(ctx context.Context, in *AddContactRequest, opts ...grpc.CallOption) (*AddContactResponse, error) {
	out := new(AddContactResponse)
	err := c.cc.Invoke(ctx, "/services.ContactService/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) RemoveContactByID(ctx context.Context, in *RemoveContactByIDRequest, opts ...grpc.CallOption) (*RemoveContactResponse, error) {
	out := new(RemoveContactResponse)
	err := c.cc.Invoke(ctx, "/services.ContactService/RemoveContactByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) RemoveContactByAddress(ctx context.Context, in *RemoveContactByAddressRequest, opts ...grpc.CallOption) (*RemoveContactResponse, error) {
	out := new(RemoveContactResponse)
	err := c.cc.Invoke(ctx, "/services.ContactService/RemoveContactByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactServiceServer is the server API for ContactService service.
type ContactServiceServer interface {
	//*
	//Lists all current contacts.
	//
	//Returns a list of all contacts currently in the database.
	GetContacts(context.Context, *GetContactsRequest) (*GetContactsResponse, error)
	//*
	//Adds a node as a contact.
	//
	//Accepts a node and adds them as a contact in the database.
	AddContact(context.Context, *AddContactRequest) (*AddContactResponse, error)
	//*
	//Removes a contact.
	//
	//Accepts a contact id and removes it from the database.
	RemoveContactByID(context.Context, *RemoveContactByIDRequest) (*RemoveContactResponse, error)
	//*
	//Removes a contact.
	//
	//Accepts a contact address and removes it from the database.
	RemoveContactByAddress(context.Context, *RemoveContactByAddressRequest) (*RemoveContactResponse, error)
}

// UnimplementedContactServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContactServiceServer struct {
}

func (*UnimplementedContactServiceServer) GetContacts(ctx context.Context, req *GetContactsRequest) (*GetContactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContacts not implemented")
}
func (*UnimplementedContactServiceServer) AddContact(ctx context.Context, req *AddContactRequest) (*AddContactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedContactServiceServer) RemoveContactByID(ctx context.Context, req *RemoveContactByIDRequest) (*RemoveContactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContactByID not implemented")
}
func (*UnimplementedContactServiceServer) RemoveContactByAddress(ctx context.Context, req *RemoveContactByAddressRequest) (*RemoveContactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContactByAddress not implemented")
}

func RegisterContactServiceServer(s *grpc.Server, srv ContactServiceServer) {
	s.RegisterService(&_ContactService_serviceDesc, srv)
}

func _ContactService_GetContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).GetContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ContactService/GetContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).GetContacts(ctx, req.(*GetContactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ContactService/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).AddContact(ctx, req.(*AddContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_RemoveContactByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContactByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).RemoveContactByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ContactService/RemoveContactByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).RemoveContactByID(ctx, req.(*RemoveContactByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_RemoveContactByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContactByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).RemoveContactByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ContactService/RemoveContactByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).RemoveContactByAddress(ctx, req.(*RemoveContactByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ContactService",
	HandlerType: (*ContactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContacts",
			Handler:    _ContactService_GetContacts_Handler,
		},
		{
			MethodName: "AddContact",
			Handler:    _ContactService_AddContact_Handler,
		},
		{
			MethodName: "RemoveContactByID",
			Handler:    _ContactService_RemoveContactByID_Handler,
		},
		{
			MethodName: "RemoveContactByAddress",
			Handler:    _ContactService_RemoveContactByAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/services/rpc.proto",
}

// MessageServiceClient is the client API for MessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageServiceClient interface {
	//*
	//Estimates the route and fees for the requested message.
	//
	//In case of failure (payment amount too large or small, payload too large),
	//an empty response is returned.
	EstimateMessage(ctx context.Context, in *EstimateMessageRequest, opts ...grpc.CallOption) (*EstimateMessageResponse, error)
	//*
	//Sends a message
	//
	//In case of failure (payment amount too large or small, payload too large),
	//an empty response is returned.
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error)
	//*
	//Creates a unidirectional stream from server to client
	//over which all received messages are sent.
	//
	//The stream does not terminate until the client stops it.
	SubscribeMessages(ctx context.Context, in *SubscribeMessageRequest, opts ...grpc.CallOption) (MessageService_SubscribeMessagesClient, error)
}

type messageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageServiceClient(cc grpc.ClientConnInterface) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) EstimateMessage(ctx context.Context, in *EstimateMessageRequest, opts ...grpc.CallOption) (*EstimateMessageResponse, error) {
	out := new(EstimateMessageResponse)
	err := c.cc.Invoke(ctx, "/services.MessageService/EstimateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error) {
	out := new(SendMessageResponse)
	err := c.cc.Invoke(ctx, "/services.MessageService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) SubscribeMessages(ctx context.Context, in *SubscribeMessageRequest, opts ...grpc.CallOption) (MessageService_SubscribeMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessageService_serviceDesc.Streams[0], "/services.MessageService/SubscribeMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageServiceSubscribeMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessageService_SubscribeMessagesClient interface {
	Recv() (*SubscribeMessageResponse, error)
	grpc.ClientStream
}

type messageServiceSubscribeMessagesClient struct {
	grpc.ClientStream
}

func (x *messageServiceSubscribeMessagesClient) Recv() (*SubscribeMessageResponse, error) {
	m := new(SubscribeMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessageServiceServer is the server API for MessageService service.
type MessageServiceServer interface {
	//*
	//Estimates the route and fees for the requested message.
	//
	//In case of failure (payment amount too large or small, payload too large),
	//an empty response is returned.
	EstimateMessage(context.Context, *EstimateMessageRequest) (*EstimateMessageResponse, error)
	//*
	//Sends a message
	//
	//In case of failure (payment amount too large or small, payload too large),
	//an empty response is returned.
	SendMessage(context.Context, *SendMessageRequest) (*SendMessageResponse, error)
	//*
	//Creates a unidirectional stream from server to client
	//over which all received messages are sent.
	//
	//The stream does not terminate until the client stops it.
	SubscribeMessages(*SubscribeMessageRequest, MessageService_SubscribeMessagesServer) error
}

// UnimplementedMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMessageServiceServer struct {
}

func (*UnimplementedMessageServiceServer) EstimateMessage(ctx context.Context, req *EstimateMessageRequest) (*EstimateMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EstimateMessage not implemented")
}
func (*UnimplementedMessageServiceServer) SendMessage(ctx context.Context, req *SendMessageRequest) (*SendMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedMessageServiceServer) SubscribeMessages(req *SubscribeMessageRequest, srv MessageService_SubscribeMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeMessages not implemented")
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_EstimateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstimateMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).EstimateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.MessageService/EstimateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).EstimateMessage(ctx, req.(*EstimateMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.MessageService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_SubscribeMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeMessageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessageServiceServer).SubscribeMessages(m, &messageServiceSubscribeMessagesServer{stream})
}

type MessageService_SubscribeMessagesServer interface {
	Send(*SubscribeMessageResponse) error
	grpc.ServerStream
}

type messageServiceSubscribeMessagesServer struct {
	grpc.ServerStream
}

func (x *messageServiceSubscribeMessagesServer) Send(m *SubscribeMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EstimateMessage",
			Handler:    _MessageService_EstimateMessage_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _MessageService_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeMessages",
			Handler:       _MessageService_SubscribeMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc/services/rpc.proto",
}

// DiscussionServiceClient is the client API for DiscussionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscussionServiceClient interface {
	//*
	//Creates a unidirectional stream from server to client
	//over which all discussions' info are sent.
	//
	//The stream terminates when all discussions' info is transmitted.
	GetDiscussions(ctx context.Context, in *GetDiscussionsRequest, opts ...grpc.CallOption) (DiscussionService_GetDiscussionsClient, error)
	//*
	//Creates a unidirectional stream from server to client
	//over which all previously exchanged messages belonging to
	//a specific discussion are sent.
	//
	//The stream terminates when all discussion history is transmitted.
	GetDiscussionHistoryByID(ctx context.Context, in *GetDiscussionHistoryByIDRequest, opts ...grpc.CallOption) (DiscussionService_GetDiscussionHistoryByIDClient, error)
	//*
	//Calculates statistics about the requested discussion.
	GetDiscussionStatistics(ctx context.Context, in *GetDiscussionStatisticsRequest, opts ...grpc.CallOption) (*GetDiscussionStatisticsResponse, error)
	//*
	//Adds a discussion to the database.
	AddDiscussion(ctx context.Context, in *AddDiscussionRequest, opts ...grpc.CallOption) (*AddDiscussionResponse, error)
	//*
	//Updates a discussion's last read message.
	UpdateDiscussionLastRead(ctx context.Context, in *UpdateDiscussionLastReadRequest, opts ...grpc.CallOption) (*UpdateDiscussionResponse, error)
	//*
	//Remove a discussion from the database.
	RemoveDiscussion(ctx context.Context, in *RemoveDiscussionRequest, opts ...grpc.CallOption) (*RemoveDiscussionResponse, error)
}

type discussionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscussionServiceClient(cc grpc.ClientConnInterface) DiscussionServiceClient {
	return &discussionServiceClient{cc}
}

func (c *discussionServiceClient) GetDiscussions(ctx context.Context, in *GetDiscussionsRequest, opts ...grpc.CallOption) (DiscussionService_GetDiscussionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiscussionService_serviceDesc.Streams[0], "/services.DiscussionService/GetDiscussions", opts...)
	if err != nil {
		return nil, err
	}
	x := &discussionServiceGetDiscussionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiscussionService_GetDiscussionsClient interface {
	Recv() (*GetDiscussionsResponse, error)
	grpc.ClientStream
}

type discussionServiceGetDiscussionsClient struct {
	grpc.ClientStream
}

func (x *discussionServiceGetDiscussionsClient) Recv() (*GetDiscussionsResponse, error) {
	m := new(GetDiscussionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *discussionServiceClient) GetDiscussionHistoryByID(ctx context.Context, in *GetDiscussionHistoryByIDRequest, opts ...grpc.CallOption) (DiscussionService_GetDiscussionHistoryByIDClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiscussionService_serviceDesc.Streams[1], "/services.DiscussionService/GetDiscussionHistoryByID", opts...)
	if err != nil {
		return nil, err
	}
	x := &discussionServiceGetDiscussionHistoryByIDClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiscussionService_GetDiscussionHistoryByIDClient interface {
	Recv() (*GetDiscussionHistoryResponse, error)
	grpc.ClientStream
}

type discussionServiceGetDiscussionHistoryByIDClient struct {
	grpc.ClientStream
}

func (x *discussionServiceGetDiscussionHistoryByIDClient) Recv() (*GetDiscussionHistoryResponse, error) {
	m := new(GetDiscussionHistoryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *discussionServiceClient) GetDiscussionStatistics(ctx context.Context, in *GetDiscussionStatisticsRequest, opts ...grpc.CallOption) (*GetDiscussionStatisticsResponse, error) {
	out := new(GetDiscussionStatisticsResponse)
	err := c.cc.Invoke(ctx, "/services.DiscussionService/GetDiscussionStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discussionServiceClient) AddDiscussion(ctx context.Context, in *AddDiscussionRequest, opts ...grpc.CallOption) (*AddDiscussionResponse, error) {
	out := new(AddDiscussionResponse)
	err := c.cc.Invoke(ctx, "/services.DiscussionService/AddDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discussionServiceClient) UpdateDiscussionLastRead(ctx context.Context, in *UpdateDiscussionLastReadRequest, opts ...grpc.CallOption) (*UpdateDiscussionResponse, error) {
	out := new(UpdateDiscussionResponse)
	err := c.cc.Invoke(ctx, "/services.DiscussionService/UpdateDiscussionLastRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discussionServiceClient) RemoveDiscussion(ctx context.Context, in *RemoveDiscussionRequest, opts ...grpc.CallOption) (*RemoveDiscussionResponse, error) {
	out := new(RemoveDiscussionResponse)
	err := c.cc.Invoke(ctx, "/services.DiscussionService/RemoveDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscussionServiceServer is the server API for DiscussionService service.
type DiscussionServiceServer interface {
	//*
	//Creates a unidirectional stream from server to client
	//over which all discussions' info are sent.
	//
	//The stream terminates when all discussions' info is transmitted.
	GetDiscussions(*GetDiscussionsRequest, DiscussionService_GetDiscussionsServer) error
	//*
	//Creates a unidirectional stream from server to client
	//over which all previously exchanged messages belonging to
	//a specific discussion are sent.
	//
	//The stream terminates when all discussion history is transmitted.
	GetDiscussionHistoryByID(*GetDiscussionHistoryByIDRequest, DiscussionService_GetDiscussionHistoryByIDServer) error
	//*
	//Calculates statistics about the requested discussion.
	GetDiscussionStatistics(context.Context, *GetDiscussionStatisticsRequest) (*GetDiscussionStatisticsResponse, error)
	//*
	//Adds a discussion to the database.
	AddDiscussion(context.Context, *AddDiscussionRequest) (*AddDiscussionResponse, error)
	//*
	//Updates a discussion's last read message.
	UpdateDiscussionLastRead(context.Context, *UpdateDiscussionLastReadRequest) (*UpdateDiscussionResponse, error)
	//*
	//Remove a discussion from the database.
	RemoveDiscussion(context.Context, *RemoveDiscussionRequest) (*RemoveDiscussionResponse, error)
}

// UnimplementedDiscussionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiscussionServiceServer struct {
}

func (*UnimplementedDiscussionServiceServer) GetDiscussions(req *GetDiscussionsRequest, srv DiscussionService_GetDiscussionsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDiscussions not implemented")
}
func (*UnimplementedDiscussionServiceServer) GetDiscussionHistoryByID(req *GetDiscussionHistoryByIDRequest, srv DiscussionService_GetDiscussionHistoryByIDServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDiscussionHistoryByID not implemented")
}
func (*UnimplementedDiscussionServiceServer) GetDiscussionStatistics(ctx context.Context, req *GetDiscussionStatisticsRequest) (*GetDiscussionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscussionStatistics not implemented")
}
func (*UnimplementedDiscussionServiceServer) AddDiscussion(ctx context.Context, req *AddDiscussionRequest) (*AddDiscussionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDiscussion not implemented")
}
func (*UnimplementedDiscussionServiceServer) UpdateDiscussionLastRead(ctx context.Context, req *UpdateDiscussionLastReadRequest) (*UpdateDiscussionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscussionLastRead not implemented")
}
func (*UnimplementedDiscussionServiceServer) RemoveDiscussion(ctx context.Context, req *RemoveDiscussionRequest) (*RemoveDiscussionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDiscussion not implemented")
}

func RegisterDiscussionServiceServer(s *grpc.Server, srv DiscussionServiceServer) {
	s.RegisterService(&_DiscussionService_serviceDesc, srv)
}

func _DiscussionService_GetDiscussions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDiscussionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiscussionServiceServer).GetDiscussions(m, &discussionServiceGetDiscussionsServer{stream})
}

type DiscussionService_GetDiscussionsServer interface {
	Send(*GetDiscussionsResponse) error
	grpc.ServerStream
}

type discussionServiceGetDiscussionsServer struct {
	grpc.ServerStream
}

func (x *discussionServiceGetDiscussionsServer) Send(m *GetDiscussionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DiscussionService_GetDiscussionHistoryByID_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDiscussionHistoryByIDRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiscussionServiceServer).GetDiscussionHistoryByID(m, &discussionServiceGetDiscussionHistoryByIDServer{stream})
}

type DiscussionService_GetDiscussionHistoryByIDServer interface {
	Send(*GetDiscussionHistoryResponse) error
	grpc.ServerStream
}

type discussionServiceGetDiscussionHistoryByIDServer struct {
	grpc.ServerStream
}

func (x *discussionServiceGetDiscussionHistoryByIDServer) Send(m *GetDiscussionHistoryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DiscussionService_GetDiscussionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscussionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscussionServiceServer).GetDiscussionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.DiscussionService/GetDiscussionStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscussionServiceServer).GetDiscussionStatistics(ctx, req.(*GetDiscussionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscussionService_AddDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDiscussionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscussionServiceServer).AddDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.DiscussionService/AddDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscussionServiceServer).AddDiscussion(ctx, req.(*AddDiscussionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscussionService_UpdateDiscussionLastRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDiscussionLastReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscussionServiceServer).UpdateDiscussionLastRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.DiscussionService/UpdateDiscussionLastRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscussionServiceServer).UpdateDiscussionLastRead(ctx, req.(*UpdateDiscussionLastReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscussionService_RemoveDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDiscussionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscussionServiceServer).RemoveDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.DiscussionService/RemoveDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscussionServiceServer).RemoveDiscussion(ctx, req.(*RemoveDiscussionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscussionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.DiscussionService",
	HandlerType: (*DiscussionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDiscussionStatistics",
			Handler:    _DiscussionService_GetDiscussionStatistics_Handler,
		},
		{
			MethodName: "AddDiscussion",
			Handler:    _DiscussionService_AddDiscussion_Handler,
		},
		{
			MethodName: "UpdateDiscussionLastRead",
			Handler:    _DiscussionService_UpdateDiscussionLastRead_Handler,
		},
		{
			MethodName: "RemoveDiscussion",
			Handler:    _DiscussionService_RemoveDiscussion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDiscussions",
			Handler:       _DiscussionService_GetDiscussions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetDiscussionHistoryByID",
			Handler:       _DiscussionService_GetDiscussionHistoryByID_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc/services/rpc.proto",
}
